//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AWCppSQLite3DB {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
};

struct AWCppSQLite3Query {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    struct sqlite3_stmt *_field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    int _field7;
};

struct AWCppSQLite3Statement {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    struct sqlite3_stmt *_field3;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CppSQLite3DB {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
};

struct CppSQLite3Query {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    struct sqlite3_stmt *_field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    int _field7;
};

struct CppSQLite3Table {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    char **_field5;
};

struct DateInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
};

struct NdIconCacheInfo_ {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    id _field5;
};

struct TACppSQLite3DB {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
};

struct TACppSQLite3Query {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    struct sqlite3_stmt *_field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    int _field7;
};

struct _List_impl {
    struct _List_node_base _M_node;
};

struct _List_node_base {
    struct _List_node_base *_M_next;
    struct _List_node_base *_M_prev;
};

struct _NSRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct _Vector_impl {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
};

struct _tag_syncqueue_condition {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    id _field3;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>>;

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<ToDo_BaseBusiness *, std::allocator<ToDo_BaseBusiness *>> {
    struct _List_impl _M_impl;
};

struct list<oapdeptuserid *, std::allocator<oapdeptuserid *>> {
    struct _List_impl _field1;
};

struct list<tododata_base *, std::allocator<tododata_base *>> {
    struct _List_impl _field1;
};

struct list<transfer_item *, std::allocator<transfer_item *>> {
    struct _List_impl _M_impl;
};

struct list<void *, std::allocator<void *>> {
    struct _List_impl _M_impl;
};

struct oapdeptuserid {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
};

struct repeat {
    double _field1;
    int _field2;
    struct repeatday _field3;
    struct repeatweek _field4;
    struct repeatmonth _field5;
};

struct repeatday;

struct repeatmonth {
    struct rmdata _field1;
};

struct repeatweek {
    int _field1;
};

struct rmdata {
    struct rmw _field1;
    int _field2;
};

struct rmw {
    int _field1;
    int _field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sqlite3;

struct sqlite3_stmt;

struct tododata_base {
    CDUnknownFunctionPointerType *_field1;
};

struct tododata_business_base {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    int _field4;
};

struct tododata_schedule {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
    char *_field15;
    _Bool _field16;
    double _field17;
    double _field18;
    int _field19;
    int _field20;
    char *_field21;
    struct repeat _field22;
    double _field23;
};

struct tododata_task {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
    unsigned char _field15;
    _Bool _field16;
    _Bool _field17;
    double _field18;
    char *_field19;
    int _field20;
    double _field21;
    int _field22;
    unsigned char _field23;
    unsigned char _field24;
    double _field25;
};

struct transfer_item {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    char *_field4;
    struct tododata_base *_field5;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl _field1;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct list<oapdeptuserid *, std::allocator<oapdeptuserid *>> {
    struct _List_impl _field1;
} list_ed499cb7;

typedef struct list<tododata_base *, std::allocator<tododata_base *>> {
    struct _List_impl _field1;
} list_33433920;

typedef struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl _field1;
} vector_9cd42a6f;

