//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "UITextInput.h"

@class MTFont, MTTextEditingCaret, MTTextLayout, MTTextMagnifierCaret, MTTextMagnifierRanged, MTTextSelectionView, NSAttributedString, NSDictionary, NSMutableAttributedString, NSString, UIColor, UITextInputStringTokenizer, UITextPosition, UITextRange;

__attribute__((visibility("hidden")))
@interface MTTextView : UIView <UITextInput>
{
    BOOL _highlighted;
    BOOL _selectable;
    BOOL _showsEditingMenuAutomatically;
    BOOL _editable;
    BOOL _editing;
    BOOL _textBold;
    BOOL _adjustsFontSizeToFitWidth;
    id <UITextInputDelegate> inputDelegate;
    NSDictionary *markedTextStyle;
    id <MTTextViewDelegate> _delegate;
    NSString *_text;
    NSAttributedString *_attributedText;
    NSString *_placeholder;
    NSAttributedString *_placeholderAttributedText;
    MTFont *_font;
    UIColor *_textColor;
    UIColor *_highlightedTextColor;
    int _textAlignment;
    int _lineBreakMode;
    float _lineSpacing;
    float _lineHeight;
    float _paragraphSpacing;
    UIColor *_selectedTextBackgroundColor;
    UIView *_inputView;
    UIView *_inputAccessoryView;
    float _shadowBlur;
    UIColor *_shadowColor;
    MTTextLayout *_textLayout;
    unsigned int _touchPhase;
    NSAttributedString *_originalAttributedTextWhenHighlighting;
    UITextInputStringTokenizer *_tokenizer;
    MTTextMagnifierCaret *_magnifierCaret;
    MTTextMagnifierRanged *_magnifierRanged;
    MTTextSelectionView *_textSelectionView;
    MTTextEditingCaret *_caretView;
    struct CGSize _shadowOffset;
    struct CGPoint _clickPoint;
    struct CGPoint _mouseLocation;
}

+ (struct CGRect)frameRectWithAttributtedString:(id)arg1 constraintSize:(struct CGSize)arg2 lineSpacing:(float)arg3 font:(id)arg4;
+ (struct CGRect)frameRectWithAttributtedString:(id)arg1 constraintSize:(struct CGSize)arg2 lineSpacing:(float)arg3;
+ (struct CGRect)frameRectWithAttributtedString:(id)arg1 constraintSize:(struct CGSize)arg2;
@property(retain, nonatomic) MTTextEditingCaret *caretView; // @synthesize caretView=_caretView;
@property(retain, nonatomic) MTTextSelectionView *textSelectionView; // @synthesize textSelectionView=_textSelectionView;
@property(retain, nonatomic) MTTextMagnifierRanged *magnifierRanged; // @synthesize magnifierRanged=_magnifierRanged;
@property(retain, nonatomic) MTTextMagnifierCaret *magnifierCaret; // @synthesize magnifierCaret=_magnifierCaret;
@property(retain, nonatomic) UITextInputStringTokenizer *tokenizer; // @synthesize tokenizer=_tokenizer;
@property(copy, nonatomic) NSAttributedString *originalAttributedTextWhenHighlighting; // @synthesize originalAttributedTextWhenHighlighting=_originalAttributedTextWhenHighlighting;
@property(nonatomic) struct CGPoint mouseLocation; // @synthesize mouseLocation=_mouseLocation;
@property(nonatomic) struct CGPoint clickPoint; // @synthesize clickPoint=_clickPoint;
@property(nonatomic) unsigned int touchPhase; // @synthesize touchPhase=_touchPhase;
@property(retain, nonatomic) MTTextLayout *textLayout; // @synthesize textLayout=_textLayout;
@property(nonatomic) BOOL adjustsFontSizeToFitWidth; // @synthesize adjustsFontSizeToFitWidth=_adjustsFontSizeToFitWidth;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(nonatomic) float shadowBlur; // @synthesize shadowBlur=_shadowBlur;
@property(nonatomic) BOOL textBold; // @synthesize textBold=_textBold;
@property(retain) UIView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(retain) UIView *inputView; // @synthesize inputView=_inputView;
@property(nonatomic, getter=isEditing) BOOL editing; // @synthesize editing=_editing;
@property(nonatomic, getter=isEditable) BOOL editable; // @synthesize editable=_editable;
@property(nonatomic) BOOL showsEditingMenuAutomatically; // @synthesize showsEditingMenuAutomatically=_showsEditingMenuAutomatically;
@property(nonatomic, getter=isSelectable) BOOL selectable; // @synthesize selectable=_selectable;
@property(nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(retain, nonatomic) UIColor *selectedTextBackgroundColor; // @synthesize selectedTextBackgroundColor=_selectedTextBackgroundColor;
@property(nonatomic) float paragraphSpacing; // @synthesize paragraphSpacing=_paragraphSpacing;
@property(nonatomic) float lineHeight; // @synthesize lineHeight=_lineHeight;
@property(nonatomic) float lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) int lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) int textAlignment; // @synthesize textAlignment=_textAlignment;
@property(retain, nonatomic) UIColor *highlightedTextColor; // @synthesize highlightedTextColor=_highlightedTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) MTFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSAttributedString *placeholderAttributedText; // @synthesize placeholderAttributedText=_placeholderAttributedText;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) __weak id <MTTextViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSDictionary *markedTextStyle; // @synthesize markedTextStyle;
@property(nonatomic) id <UITextInputDelegate> inputDelegate; // @synthesize inputDelegate;
- (void).cxx_destruct;
- (void)adjustsFontSizeWithMaxSize:(float)arg1;
- (void)adjustsFontSize;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 forAttributedString:(id)arg3;
- (void)insertAttributedText:(id)arg1;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (BOOL)hasText;
- (BOOL)shouldChangeTextInRange:(id)arg1 replacementText:(id)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2;
- (int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2;
@property(nonatomic) int autocorrectionType;
- (int)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (int)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3;
- (id)positionFromPosition:(id)arg1 offset:(int)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)canResignFirstResponder;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (struct CGRect)editingMenuRectForSelection;
- (void)hideEditingMenu;
- (void)showEditingMenu;
- (void)updateCaretPositionToPoint:(struct CGPoint)arg1;
- (void)updateCaretPosition;
- (void)beginEditing;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)grabberMoved:(id)arg1;
- (void)doubleTaped:(id)arg1;
- (void)selectionGestureStateChanged:(id)arg1;
- (void)hideTextSelectionView;
- (void)showTextSelectionView;
- (void)resetSelectionGrabber;
- (void)hideMagnifierRanged;
- (void)moveMagnifierRangedToPoint:(struct CGPoint)arg1;
- (void)hideMagnifierCaret;
- (void)moveMagnifierCaretToPoint:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(float)arg2;
- (void)highlightMarkedText;
- (void)highlightSelection;
- (BOOL)containsPointInTextFrame:(struct CGPoint)arg1;
- (BOOL)containsPointInSelection:(struct CGPoint)arg1;
- (long)stringIndexAtPoint:(struct CGPoint)arg1;
- (void)notifyTextChanged;
- (void)textChanged;
- (void)notifySelectionChanged;
- (void)selectionChanged;
- (void)finishSelecting;
- (void)clearSelection;
- (void)updateLayout;
- (void)setAttributes:(id)arg1;
- (void)setParagraphStyle;
- (void)setTextColorAttributes;
- (void)setFontAttributes;
- (void)setAdditionalAttributes;
@property(readonly, nonatomic) struct CGRect caretRect;
@property(readonly, nonatomic) NSMutableAttributedString *editingAttributedText;
- (id)editingText;
@property(readonly, nonatomic) NSAttributedString *selectedAttributedText;
@property(readonly, nonatomic) NSString *selectedText;
@property(readonly, nonatomic) struct _NSRange selectedRange;
@property(readonly, nonatomic) struct CGRect layoutFrame;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1 adjustFont:(BOOL)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithPlaceholder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)setupTextEditingControls;
- (void)setupTextSelectionControls;
- (void)commonInit;
- (void)dealloc;

// Remaining properties
@property(nonatomic) int autocapitalizationType;
@property(nonatomic) BOOL enablesReturnKeyAutomatically;
@property(nonatomic) int keyboardAppearance;
@property(nonatomic) int keyboardType;
@property(nonatomic) int returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(nonatomic) int selectionAffinity;
@property(nonatomic) int spellCheckingType;
@property(readonly, nonatomic) UIView *textInputView;

@end

