//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PainterProtocol.h"

@class GLProgram, NSString, Texture2D;

__attribute__((visibility("hidden")))
@interface ParticlePainter : NSObject <PainterProtocol>
{
    NSString *_particleEmitterFileName;
    int emitterType;
    Texture2D *textureSucai;
    Texture2D *textureSucai1;
    Texture2D *textureSucai2;
    Texture2D *textureSucai3;
    CDStruct_6e3f967a sourcePosition;
    CDStruct_6e3f967a sourcePositionVariance;
    float angle;
    float angleVariance;
    float speed;
    float speedVariance;
    float radialAcceleration;
    float tangentialAcceleration;
    float radialAccelVariance;
    float tangentialAccelVariance;
    CDStruct_6e3f967a gravity;
    float particleLifespan;
    float particleLifespanVariance;
    CDStruct_0b1c536a startColor;
    CDStruct_0b1c536a startColorVariance;
    CDStruct_0b1c536a finishColor;
    CDStruct_0b1c536a finishColorVariance;
    float startParticleSize;
    float startParticleSizeVariance;
    float finishParticleSize;
    float finishParticleSizeVariance;
    unsigned int maxParticles;
    int particleCount;
    float emissionRate;
    float emitCounter;
    float elapsedTime;
    float duration;
    float rotationStart;
    float rotationStartVariance;
    float rotationEnd;
    float rotationEndVariance;
    int rotationChange;
    int blendFuncSource;
    int blendFuncDestination;
    float maxRadius;
    float maxRadiusVariance;
    float radiusSpeed;
    float minRadius;
    float rotatePerSecond;
    float rotatePerSecondVariance;
    BOOL active;
    BOOL useTexture;
    int particleIndex;
    int vertexIndex;
    unsigned int verticesID;
    unsigned int vertexObjectID;
    CDStruct_e610743d *particles;
    struct {
        CDStruct_194f774e _field1;
        CDStruct_194f774e _field2;
        CDStruct_194f774e _field3;
        CDStruct_194f774e _field4;
    } *quads;
    unsigned short *indices;
    GLProgram *_program;
    int nImageCount;
    int nImageIsMipmap;
    int nImageIsPhysical;
    id <CanvasProtocol> _canvas;
}

@property(retain, nonatomic) GLProgram *program; // @synthesize program=_program;
@property(nonatomic) float duration; // @synthesize duration;
@property(nonatomic) int particleCount; // @synthesize particleCount;
@property(nonatomic) BOOL active; // @synthesize active;
@property(nonatomic) CDStruct_6e3f967a sourcePosition; // @synthesize sourcePosition;
- (void).cxx_destruct;
- (void)setStartColor:(CDStruct_0b1c536a)arg1;
- (void)setupArrays;
- (void)parseParticleConfig:(id)arg1;
- (void)initParticle:(CDStruct_e610743d *)arg1;
- (BOOL)addParticle;
- (void)paintWithFBOSize:(struct CGSize)arg1 imageRect:(struct CGRect)arg2;
- (void)setCanvas:(id)arg1;
- (void)resetPainter;
- (void)paintDown;
- (void)paintTo:(struct CGPoint)arg1;
- (void)paintUp;
- (void)show;
- (void)renderParticlesForSave:(struct CGSize)arg1 transfrom:(struct CGRect)arg2;
- (void)resetParticlePainter;
- (void)stopParticlePainter;
- (void)updateWithDelta:(float)arg1;
- (id)initParticlePainterWithFile:(id)arg1;
- (void)dealloc;

@end

