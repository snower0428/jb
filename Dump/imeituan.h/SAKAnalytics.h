//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CLLocationManagerDelegate.h"

@class CLLocation, CLLocationManager, NSDate, NSMutableArray, NSString, NSTimer, SAKAnalyticsBaseHeader, SAKAnalyticsHeader;

@interface SAKAnalytics : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    CLLocation *_lastLocation;
    NSTimer *_timer;
    NSMutableArray *_locationSensitiveBlocks;
    NSDate *_startDate;
    BOOL _baseHeaderObserverEnabled;
    unsigned int _backgroundTask;
    NSString *_sessionID;
    double _sessionIDUpdateTime;
    BOOL _crashReportingEnabled;
    BOOL _started;
    SAKAnalyticsBaseHeader *_baseHeader;
    NSString *_GAID;
    NSString *_FlurryID;
    SAKAnalyticsHeader *_header;
    id <GAITracker> _GATracker;
}

+ (id)sharedAnalytics;
+ (void)setLogFilePath:(id)arg1;
+ (void)setLogEnabled:(BOOL)arg1;
+ (void)logLaunchInfo:(id)arg1;
+ (void)logDNSPoisioning:(id)arg1 DNS:(id)arg2 realDNS:(id)arg3;
+ (void)logError:(id)arg1;
+ (void)logNetworkState:(id)arg1;
+ (void)trackTransactionWithOrderId:(id)arg1 dealId:(id)arg2 orderType:(id)arg3 count:(int)arg4 singlePrice:(id)arg5 deliveryFee:(float)arg6;
+ (void)trackPayOrder:(id)arg1 deal:(id)arg2 price:(id)arg3;
+ (void)trackCreateOrder:(id)arg1 andDeal:(id)arg2;
+ (void)trackStrategyWithDealID:(id)arg1 strategy:(id)arg2;
+ (void)trackSetting:(id)arg1;
+ (void)trackCityID:(id)arg1 name:(id)arg2;
+ (void)trackPageRoot:(id)arg1 name:(id)arg2 content:(id)arg3 type:(id)arg4;
+ (void)trackWitness:(id)arg1 content:(id)arg2;
+ (void)trackPage:(id)arg1;
+ (void)trackEvent:(id)arg1 action:(id)arg2 label:(id)arg3 value:(int)arg4;
+ (void)trackMeituanPageRoot:(id)arg1 name:(id)arg2 content:(id)arg3 type:(id)arg4;
+ (void)trackMeituanEventCategory:(id)arg1 action:(id)arg2 label:(id)arg3 value:(int)arg4;
+ (void)trackUserLocation:(id)arg1 location:(id)arg2;
+ (void)trackUserRegister:(id)arg1;
+ (void)trackUserPush:(id)arg1;
+ (void)trackUserLogin:(id)arg1;
+ (void)logUpdateUUID:(id)arg1 oldUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) id <GAITracker> GATracker; // @synthesize GATracker=_GATracker;
@property(retain, nonatomic) SAKAnalyticsHeader *header; // @synthesize header=_header;
@property(nonatomic) BOOL started; // @synthesize started=_started;
@property(nonatomic) BOOL crashReportingEnabled; // @synthesize crashReportingEnabled=_crashReportingEnabled;
@property(copy, nonatomic) NSString *FlurryID; // @synthesize FlurryID=_FlurryID;
@property(copy, nonatomic) NSString *GAID; // @synthesize GAID=_GAID;
@property(retain, nonatomic) SAKAnalyticsBaseHeader *baseHeader; // @synthesize baseHeader=_baseHeader;
- (void).cxx_destruct;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)startSAKAnalytics;
- (void)startFlurry;
- (void)startGA;
- (void)uploadHistoryAnalytics;
- (void)dispatch;
- (void)cleanHistoryAnalytics;
- (void)collectCrashLog;
- (void)startTracker;
- (void)didChangedLocation:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)logLocationSensitiveEventType:(int)arg1 parameter:(id)arg2 timeStamp:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)logEventType:(int)arg1 parameter:(id)arg2 timeStamp:(id)arg3;
- (id)eventWithHeader:(id)arg1 name:(id)arg2 parameter:(id)arg3 timeStamp:(id)arg4;
- (void)logEventHeader:(id)arg1 name:(id)arg2 parameter:(id)arg3 timeStamp:(id)arg4;
- (void)logEvent:(id)arg1 parameter:(id)arg2 timeStamp:(id)arg3;
- (void)waitStartingWithRetryNumber:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (void)updateNoObserverBaseHeader:(CDUnknownBlockType)arg1;
- (void)updateHeader:(CDUnknownBlockType)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)sessionID_;
- (id)sessionID;
- (id)init;
- (void)dealloc;

@end

