//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TTStyle.h"

@class UIColor, UIFont;

@interface TTTextStyle : TTStyle
{
    UIFont *_font;
    UIColor *_color;
    UIColor *_shadowColor;
    struct CGSize _shadowOffset;
    float _minimumFontSize;
    int _numberOfLines;
    int _textAlignment;
    int _verticalAlignment;
    int _lineBreakMode;
}

+ (id)styleWithFont:(id)arg1 color:(id)arg2 minimumFontSize:(float)arg3 shadowColor:(id)arg4 shadowOffset:(struct CGSize)arg5 textAlignment:(int)arg6 verticalAlignment:(int)arg7 lineBreakMode:(int)arg8 numberOfLines:(int)arg9 next:(id)arg10;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 minimumFontSize:(float)arg3 shadowColor:(id)arg4 shadowOffset:(struct CGSize)arg5 next:(id)arg6;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 shadowColor:(id)arg3 shadowOffset:(struct CGSize)arg4 next:(id)arg5;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 textAlignment:(int)arg3 next:(id)arg4;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 next:(id)arg3;
+ (id)styleWithColor:(id)arg1 next:(id)arg2;
+ (id)styleWithFont:(id)arg1 next:(id)arg2;
+ (id)styleWithCssSelector:(id)arg1 minimumFontSize:(float)arg2 textAlignment:(int)arg3 verticalAlignment:(int)arg4 lineBreakMode:(int)arg5 numberOfLines:(int)arg6 next:(id)arg7;
+ (id)styleWithCssSelector:(id)arg1 minimumFontSize:(float)arg2 next:(id)arg3;
+ (id)styleWithCssSelector:(id)arg1 next:(id)arg2;
+ (id)styleWithCssSelector:(id)arg1 forState:(unsigned int)arg2 minimumFontSize:(float)arg3 textAlignment:(int)arg4 verticalAlignment:(int)arg5 lineBreakMode:(int)arg6 numberOfLines:(int)arg7 next:(id)arg8;
+ (id)styleWithCssSelector:(id)arg1 forState:(unsigned int)arg2 minimumFontSize:(float)arg3 next:(id)arg4;
+ (id)styleWithCssSelector:(id)arg1 forState:(unsigned int)arg2 next:(id)arg3;
@property(nonatomic) int lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) int verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) int textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) int numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) float minimumFontSize; // @synthesize minimumFontSize=_minimumFontSize;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
- (struct CGSize)addToSize:(struct CGSize)arg1 context:(id)arg2;
- (void)draw:(id)arg1;
- (void)drawText:(id)arg1 context:(id)arg2;
- (struct CGRect)rectForText:(id)arg1 forSize:(struct CGSize)arg2 withFont:(id)arg3;
- (struct CGSize)sizeOfText:(id)arg1 withFont:(id)arg2 size:(struct CGSize)arg3;
- (void)dealloc;
- (id)initWithNext:(id)arg1;

@end

