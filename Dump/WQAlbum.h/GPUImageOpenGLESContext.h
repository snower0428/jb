//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class EAGLContext, GLProgram, NSMutableDictionary, NSObject<OS_dispatch_queue>;

@interface GPUImageOpenGLESContext : NSObject
{
    NSMutableDictionary *shaderProgramCache;
    EAGLContext *_context;
    GLProgram *_currentShaderProgram;
    NSObject<OS_dispatch_queue> *_contextQueue;
}

+ (BOOL)supportsFastTextureUpload;
+ (struct CGSize)sizeThatFitsWithinATextureForSize:(struct CGSize)arg1;
+ (int)maximumTextureUnitsForThisDevice;
+ (int)maximumTextureSizeForThisDevice;
+ (void)setActiveShaderProgram:(id)arg1;
+ (void)useImageProcessingContext;
+ (id)sharedOpenGLESQueue;
+ (id)sharedImageProcessingOpenGLESContext;
+ (void *)contextKey;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *contextQueue; // @synthesize contextQueue=_contextQueue;
@property(retain, nonatomic) GLProgram *currentShaderProgram; // @synthesize currentShaderProgram=_currentShaderProgram;
- (void).cxx_destruct;
@property(readonly, nonatomic) EAGLContext *context; // @synthesize context=_context;
- (id)programForVertexShaderString:(id)arg1 fragmentShaderString:(id)arg2;
- (void)presentBufferForDisplay;
- (id)init;

@end

