//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AsyncCallbackBase.h"
#import "BuddyUIDelegate.h"
#import "ClientAsyncNotifyServiceBase.h"
#import "DataRequestDelegate.h"
#import "tribeProcessResultDelegate.h"

@class NSDate, NSMutableArray, NSMutableDictionary, NSString, NSThread, NSTimer, WWSession;

@interface Messenger : NSObject <ClientAsyncNotifyServiceBase, AsyncCallbackBase, DataRequestDelegate, BuddyUIDelegate, tribeProcessResultDelegate>
{
    _Bool needAutoLogin;
    NSDate *_getTribeListTime;
    NSThread *_workThread;
    NSMutableDictionary *_dicCacheTribeMsgFileHash;
    NSMutableDictionary *_dicCacheFileHash;
    NSMutableDictionary *dicTokenProc;
    NSMutableDictionary *_dicTribeProc;
    BOOL _needAbandonBackGroundTask;
    WWSession *_currentWangWangSession;
    NSString *_curWangWangSessionId;
    NSMutableArray *__cacheLastPluginMsgs;
    NSTimer *ncTimer;
    NSString *currentTribeSessionId;
    int reqReadTimeStampRetCode;
    NSString *currentUserId;
}

+ (id)shareMd5ToDownFileInfo;
+ (id)shareDicMd5ToMsgId;
+ (id)shareWangWangOnlineList;
+ (id)sharedMessenger;
@property(copy) NSString *currentUserId; // @synthesize currentUserId;
@property int reqReadTimeStampRetCode; // @synthesize reqReadTimeStampRetCode;
@property(retain, nonatomic) NSDate *getTribeListTime; // @synthesize getTribeListTime=_getTribeListTime;
@property BOOL needAbandonBackGroundTask; // @synthesize needAbandonBackGroundTask=_needAbandonBackGroundTask;
@property(retain, nonatomic) NSString *currentTribeSessionId; // @synthesize currentTribeSessionId;
@property(retain, nonatomic) NSTimer *ncTimer; // @synthesize ncTimer;
@property(retain, nonatomic) NSMutableArray *cacheLastPluginMsgs; // @synthesize cacheLastPluginMsgs=__cacheLastPluginMsgs;
@property(copy) NSString *curWangWangSessionId; // @synthesize curWangWangSessionId=_curWangWangSessionId;
@property(retain, nonatomic) WWSession *currentWangWangSession; // @synthesize currentWangWangSession=_currentWangWangSession;
- (void)processTribeResult:(BOOL)arg1 operation:(id)arg2 param:(id)arg3;
- (void)sendBatchContactReadTimestampByIds:(id)arg1;
- (void)sendBatchContactReadTimestamp:(id)arg1;
- (void)sendBatchMessageReadTimeStamp:(id)arg1;
- (void)sendContactReadTimestamp:(id)arg1 sessionType:(id)arg2 stamp:(unsigned int)arg3;
- (void)sendSessionReadTimestamp:(id)arg1;
- (unsigned int)getSessionTimeStamp:(id)arg1;
- (void)getServerContactUnreadTimestamp;
- (BOOL)isNeedSetUnreadCountForSession:(id)arg1 offlineMsg:(BOOL)arg2 timeStamp:(unsigned int)arg3;
- (BOOL)IsReqReadTimeRetCodeSubSet;
- (void)resetWangWangContactList:(id)arg1;
- (void)resetWangWangContactListInBackground:(id)arg1;
- (void)updateLocalPersonsCommentsFromAddressBook;
- (void)updateLocalWWPersonsInfosWithData:(id)arg1;
- (void)updateLocalPersonsInfosWithData:(id)arg1;
- (void)performSelectorOnWorkThread:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
- (void)onBuddyOpResult:(int)arg1 withInfo:(id)arg2 withError:(id)arg3;
- (void)ResponseFail:(unsigned int)arg1 forReqParam:(id)arg2 forError:(id)arg3 forReserved:(unsigned short)arg4 forExtraHeadData:(id)arg5;
- (void)ResponseSuccess:(unsigned int)arg1 forReqParam:(id)arg2 forRspData:(id)arg3 forReserved:(unsigned short)arg4 forExtraHeadData:(id)arg5;
- (void)Notify:(unsigned int)arg1 forParam:(id)arg2 forReserved:(unsigned short)arg3 forExtraHeadData:(id)arg4;
- (void)sendGetSpecialOfflineMessageAckWithLastTime:(long long)arg1 andMsgCount:(int)arg2 andBizIdsStr:(id)arg3;
- (void)sendGetOfflineMessageAckWithLastTime:(long long)arg1;
- (void)getSpecialOfflineMessageWithLastTime:(long long)arg1 andMsgCount:(int)arg2 andBizIds:(id)arg3;
- (void)getSpecialOfflineMessageWithLastTime:(long long)arg1 andMsgCount:(int)arg2 andBizIdsStr:(id)arg3;
- (id)getValidBizIdsData:(id)arg1;
- (void)getOfflineMessageWithLastTime:(long long)arg1 andMsgCount:(int)arg2;
- (void)sendDelofflinemsgReqWithLastTime:(long long)arg1 andMsgCount:(int)arg2;
- (void)downloadOfflineMessage:(int)arg1 withSize:(int)arg2;
- (void)requestWentWrong:(id)arg1;
- (void)asyncGetMpcsRoomInfo:(id)arg1;
- (void)receiveNtfRoomUserChg:(const struct CMpcsNtfUsersts *)arg1;
- (void)receiveNtfCreateRoom:(const struct CMpcsNtfCreateroom *)arg1;
- (void)receiveMpcsMessage:(const struct CMpcsNtfMessage *)arg1;
- (void)playTTSWithMessage:(id)arg1;
- (void)onLogining:(id)arg1;
- (void)onLoginFailed:(id)arg1;
- (void)onReLoginSuccess:(id)arg1;
- (void)onLoginSuccessByTaobao:(id)arg1;
- (void)onLoginSuccess:(id)arg1;
- (void)updateLocalPersonsCommentsFromAddressBookInBackground;
- (void)updateLocalWWPersonsInfosInBackground:(id)arg1;
- (void)processOfflineTribeSysMsgs:(id)arg1;
- (void)dealOfflineMessagesForTcpRspDataInBackground:(id)arg1;
- (struct _WXMessageCount)receiveWangWangMessages:(id)arg1;
- (void)workThreadFunction;
- (void)onThreadTime:(id)arg1;
- (id)GetPublicAccountMsgContentInfo:(id)arg1;
- (id)processlastTribeMsg:(id)arg1;
- (id)processlastIMMsg:(basic_string_1cdf7af0)arg1;
- (void)doResponseReqUnsubBiz:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseReqSubBiz:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseReqBatchMessageRead:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseReqMessageRead:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseReqReadTimes:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseGetTribeInfo:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseReqOfflineMessages:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3 forReserved:(unsigned short)arg4 forExtraHeadData:(id)arg5;
- (void)doResponseGetToken:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doResponseImReqDeleteOfflineMessage:(BOOL)arg1 reqParam:(id)arg2 rspData:(id)arg3;
- (void)doIMNotifyCmdOperationTipForPlugin:(const struct CImNtfOperationtip *)arg1;
- (void)doIMNotifyCmdOperationTipForContact:(const struct CImNtfOperationtip *)arg1;
- (void)doIMNotifyCmdOperationTipForFriendRecommend:(const struct CImNtfOperationtip *)arg1;
- (void)doIMNotifyCmdOperationTipForOfflineMessage:(const struct CImNtfOperationtip *)arg1;
- (void)doMPCSNotifyCmdUsersts:(id)arg1;
- (void)doMPCSNotifyCmdCreateRoom:(id)arg1;
- (void)doMPCSNotifyCmdMessage:(id)arg1;
- (void)doIMNotifyCmdNeedAuthcode:(id)arg1;
- (void)doIMNotifyCmdOperationTip:(id)arg1;
- (void)doIMNotifyCmdCommon:(id)arg1;
- (void)doIMNotifyCmdTribeMessage:(id)arg1;
- (void)doIMNotifyCmdIMMessage:(id)arg1 forReserved:(unsigned short)arg2 forExtraHeadData:(id)arg3;
- (void)doIMNotifyCmdStatus:(id)arg1;
- (void)doIMNotifyCmdForcedDisconnect:(id)arg1;
- (void)processNotifyContactOperation:(const struct SNotifyContactOperate *)arg1 SendTime:(unsigned int)arg2 andSave:(BOOL)arg3;
- (void)processNotifyFriendRecommend:(const struct SFriendRecommendList *)arg1 SendTime:(unsigned int)arg2 andSave:(BOOL)arg3;
- (void)processPluginNotify:(const struct SNotifyPlugin *)arg1 withSave:(BOOL)arg2;
- (void)exitTribe:(id)arg1 withDelegate:(id)arg2;
- (void)agreeToJoinTribe:(id)arg1 wihtInviteMsg:(id)arg2 agreement:(BOOL)arg3 withDelegate:(id)arg4;
- (void)getTribeMembers:(id)arg1 withDelegate:(id)arg2;
- (void)getTribeInfo:(id)arg1 withDelegate:(id)arg2;
- (void)getTribeListWithDelegate:(id)arg1;
- (void)requestIMCloudServiceToken;
- (int)receiveTribeMessagesInBackground:(id)arg1;
- (void)receiveWangWangMessagesInBackground:(id)arg1;
- (void)processTribeMsgs:(id)arg1;
- (void)processTribeMsgs_image:(id)arg1 param:(id)arg2 withArrys:(id)arg3;
- (void)processTribeOperation:(id)arg1;
- (void)processBusiness:(id)arg1;
- (void)manualLogout;
- (void)enterBackLogout;
- (void)abortLogin;
- (void)logout;
- (void)unsubscribeBizChannel:(id)arg1;
- (void)subscribeBizChannel:(id)arg1;
- (void)loginToServer:(id)arg1 withUserId:(id)arg2 andToken:(id)arg3 andSite:(id)arg4 andCheckCode:(id)arg5 andAuthCodeUrl:(id)arg6 andPwType:(int)arg7;
- (void)dealReadTimeStampInBackground:(id)arg1;
- (void)processImCloudServiceTokenInfo:(id)arg1;
- (void)processTokenCheckData:(id)arg1 token:(id)arg2;
- (void)onCheckLoginThreadTimer;
- (void)setAutoLogin:(BOOL)arg1;
- (void)setNeedAutoLogin:(_Bool)arg1;
- (_Bool)isNeedAutoLogin;
- (void)dealloc;
- (id)init;
- (BOOL)isWangWangOnline:(id)arg1;
- (void)setWangWangOnline:(id)arg1 status:(id)arg2;
- (void)ChangeStatus:(id)arg1 preStatus:(int)arg2;

@end

