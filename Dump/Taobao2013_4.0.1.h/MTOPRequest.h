//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TBSDKNetworkProgressProtocol.h"
#import "TBSDKServerDelegate.h"

@class MAZeroingWeakRef, MTOPErrorHandle, NSDictionary, NSString, TBErrorResponse, TBSDKMTOPServer;

@interface MTOPRequest : NSObject <TBSDKServerDelegate, TBSDKNetworkProgressProtocol>
{
    BOOL disableAutoGenerateTimestamp;
    CDUnknownBlockType onSuccess;
    CDUnknownBlockType onFail;
    BOOL isKeepSidIfNotLoginSign;
    BOOL useSynchronousRequest;
    BOOL isRequesting;
    MTOPErrorHandle *_mtopErrorHandle;
    Class _delegateClass;
    Class _uploadRequestDelegateClass;
    BOOL _useSynchronousRequest;
    BOOL _needEcodeSign;
    BOOL _isCache;
    BOOL _isUseCache;
    BOOL _forceRefresh;
    BOOL _useCacheIfFaild;
    BOOL _useLoginAuthCenter;
    BOOL _useApiCache;
    CDUnknownBlockType onReceivedHead;
    SEL requestWillStartSelector;
    SEL requestDidStartSelector;
    SEL requestDidFinishSelector;
    SEL requestDidFailedSelector;
    SEL requestDidCanceledSelector;
    SEL requestNeedLoginSelector;
    SEL requestDidReceivedResponseHeaderSelector;
    TBSDKMTOPServer *_mtopService;
    id _httpUploadRequestDelegate;
    TBErrorResponse *_responseError;
    NSString *_httpCacheKey;
    NSString *_actionIdentifier;
    id _delegate;
    int _tag;
    NSDictionary *_requestHeaders;
    NSDictionary *_responseHeaders;
    NSString *_customMTOPURL;
    MAZeroingWeakRef *_uploadRequestDelegateMAZeroingWeakRef;
    double _requestStartTime;
    double _validTimestamp;
    double _apiCacheTimeOutSeconds;
}

+ (id)requestWithMethod:(id)arg1;
+ (id)parseUniversalRespondWithDic:(id)arg1;
+ (id)parseUniversalRespond:(id)arg1;
+ (id)formupUniversalRequest:(id)arg1 usingLogin:(BOOL)arg2;
@property(retain, nonatomic) MAZeroingWeakRef *uploadRequestDelegateMAZeroingWeakRef; // @synthesize uploadRequestDelegateMAZeroingWeakRef=_uploadRequestDelegateMAZeroingWeakRef;
@property(nonatomic) double apiCacheTimeOutSeconds; // @synthesize apiCacheTimeOutSeconds=_apiCacheTimeOutSeconds;
@property(nonatomic) BOOL useApiCache; // @synthesize useApiCache=_useApiCache;
@property(nonatomic) BOOL useLoginAuthCenter; // @synthesize useLoginAuthCenter=_useLoginAuthCenter;
@property(nonatomic) BOOL useCacheIfFaild; // @synthesize useCacheIfFaild=_useCacheIfFaild;
@property(retain, nonatomic) NSString *customMTOPURL; // @synthesize customMTOPURL=_customMTOPURL;
@property(retain, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain, nonatomic) NSDictionary *requestHeaders; // @synthesize requestHeaders=_requestHeaders;
@property(nonatomic) int tag; // @synthesize tag=_tag;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *actionIdentifier; // @synthesize actionIdentifier=_actionIdentifier;
@property(nonatomic) double validTimestamp; // @synthesize validTimestamp=_validTimestamp;
@property(retain, nonatomic) NSString *httpCacheKey; // @synthesize httpCacheKey=_httpCacheKey;
@property(nonatomic) BOOL forceRefresh; // @synthesize forceRefresh=_forceRefresh;
@property(nonatomic) BOOL isUseCache; // @synthesize isUseCache=_isUseCache;
@property(nonatomic) BOOL isCache; // @synthesize isCache=_isCache;
@property(retain, nonatomic) TBErrorResponse *responseError; // @synthesize responseError=_responseError;
@property(readonly, nonatomic) double requestStartTime; // @synthesize requestStartTime=_requestStartTime;
@property(nonatomic) id httpUploadRequestDelegate; // @synthesize httpUploadRequestDelegate=_httpUploadRequestDelegate;
@property(nonatomic) BOOL needEcodeSign; // @synthesize needEcodeSign=_needEcodeSign;
@property(retain, nonatomic) TBSDKMTOPServer *mtopService; // @synthesize mtopService=_mtopService;
@property(nonatomic) SEL requestDidReceivedResponseHeaderSelector; // @synthesize requestDidReceivedResponseHeaderSelector;
@property(nonatomic) SEL requestNeedLoginSelector; // @synthesize requestNeedLoginSelector;
@property(nonatomic) SEL requestDidCanceledSelector; // @synthesize requestDidCanceledSelector;
@property(nonatomic) SEL requestDidFailedSelector; // @synthesize requestDidFailedSelector;
@property(nonatomic) SEL requestDidFinishSelector; // @synthesize requestDidFinishSelector;
@property(nonatomic) SEL requestDidStartSelector; // @synthesize requestDidStartSelector;
@property(nonatomic) SEL requestWillStartSelector; // @synthesize requestWillStartSelector;
@property(nonatomic) BOOL useSynchronousRequest; // @synthesize useSynchronousRequest=_useSynchronousRequest;
@property(nonatomic) BOOL isKeepSidIfNotLoginSign; // @synthesize isKeepSidIfNotLoginSign;
@property(copy, nonatomic) CDUnknownBlockType onFail; // @synthesize onFail;
@property(copy, nonatomic) CDUnknownBlockType onSuccess; // @synthesize onSuccess;
@property(copy, nonatomic) CDUnknownBlockType onReceivedHead; // @synthesize onReceivedHead;
@property(nonatomic) BOOL disableAutoGenerateTimestamp; // @synthesize disableAutoGenerateTimestamp;
- (BOOL)isMethdNeedEcodeSign;
- (BOOL)isTHSwitchDemoteOn;
- (BOOL)isAsyncRequest;
- (void)request:(id)arg1 didSendBytes:(long long)arg2;
- (void)setProgress:(float)arg1;
@property(nonatomic) id <MTOPUploadRequestDelegate> uploadRequestDelegate;
- (void)showNetWorkIndicator;
- (void)requestReceivedResponseHeaders:(id)arg1;
- (void)MtopRequestRelease;
- (void)MtopRequestRetain;
- (id)dataForRequest;
- (void)requestFinished:(id)arg1;
- (void)jsonParseFailed:(id)arg1;
- (void)addData:(id)arg1 withFileName:(id)arg2 forKey:(id)arg3;
- (id)dictToQueryString:(id)arg1;
- (id)urlForGetRequest;
- (id)urlForRequest;
- (void)cancelAsyncRequest;
- (void)cancel;
- (id)data;
- (void)responseFailed;
- (void)responseSelector:(SEL)arg1;
- (id)md5Data:(id)arg1;
- (id)md5:(id)arg1;
- (id)converTBSDKErrorResponseToTBErrorResponse:(id)arg1;
- (void)requestFailed:(id)arg1;
- (void)requestSuccess:(id)arg1;
- (void)requestStarted:(id)arg1;
- (void)responseNeedLogin;
- (void)responseSuccess;
- (void)responseStart;
- (void)responseWillStart;
- (void)addTraceRecord;
- (void)sendRequest;
- (void)processRequestParams;
- (double)timeOutSeconds;
- (void)setTimeOutSeconds:(double)arg1;
- (id)responseString;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (id)responseJSON;
- (void)setUsePOST:(BOOL)arg1;
- (BOOL)usePOST;
- (void)addRequestHeaders:(id)arg1;
- (void)addRequestHeader:(id)arg1 value:(id)arg2;
- (void)removeTopParam:(id)arg1;
- (void)addTopParam:(id)arg1 forKey:(id)arg2;
- (void)removeParam:(id)arg1;
- (void)addParam:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithMethod:(id)arg1;
- (id)init;
- (id)requestParamNames;
- (void)addPagination:(id)arg1;

@end

