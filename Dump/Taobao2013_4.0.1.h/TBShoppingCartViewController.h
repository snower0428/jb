//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TBSKUPOPViewController.h"

#import "TBModelStatusDelegate.h"
#import "TBShoppingCartTableViewServiceDelegate.h"

@class HUDActivityView, NSIndexPath, NSMutableArray, NSString, TBBarButtonItem, TBCartBagListItem, TBCartBagService, TBCartBagValidGroupItem, TBCartShakePopupView, TBCartShakeService, TBModelStatusHandler, TBPromotionPopView, TBSegmentControl, TBShopingCartSummarizationView, TBShoppingCartStatusInfo, TBShoppingCartTableViewService, UITableView, UIView;

@interface TBShoppingCartViewController : TBSKUPOPViewController <TBModelStatusDelegate, TBShoppingCartTableViewServiceDelegate>
{
    BOOL _isLoadFailed;
    BOOL _noNeedRefresh;
    BOOL _needDisplayExpiredMassage;
    BOOL _needDisplayShake;
    BOOL _isShenqiTipClosed;
    BOOL _isLoadingShakeResult;
    BOOL _willApearOnce;
    BOOL _didLoadOnce;
    TBCartBagService *_cartBagService;
    TBModelStatusHandler *_handler;
    TBShoppingCartTableViewService *_tableViewService;
    TBShopingCartSummarizationView *_summarizationView;
    TBShoppingCartStatusInfo *_statusInfo;
    TBBarButtonItem *_balanceBaItem;
    NSString *_cartShakeSource;
    NSIndexPath *_needUpdateOfindexPath;
    TBCartBagListItem *_currentItem;
    TBCartBagValidGroupItem *_currentGroup;
    UITableView *_tableView;
    int _selectedSeg;
    TBCartBagListItem *_cartBagListItemForDetail;
    UIView *_orderListBar;
    HUDActivityView *_dataLoadingView;
    TBPromotionPopView *_promotionPop;
    TBCartShakePopupView *_cartShakePopupView;
    TBCartShakeService *_cartShakeService;
    UIView *_headerSection;
    TBSegmentControl *_myseg;
    UIView *_activityBar;
    UIView *_userGuideView;
    UIView *_topBannerView;
    int _lastOffset;
    NSMutableArray *_headerBannerArray;
    UIView *_statusView;
}

+ (BOOL)tbNeedToolbar;
@property(retain, nonatomic) UIView *statusView; // @synthesize statusView=_statusView;
@property(retain, nonatomic) NSMutableArray *headerBannerArray; // @synthesize headerBannerArray=_headerBannerArray;
@property(nonatomic) int lastOffset; // @synthesize lastOffset=_lastOffset;
@property(nonatomic) BOOL didLoadOnce; // @synthesize didLoadOnce=_didLoadOnce;
@property(nonatomic) BOOL willApearOnce; // @synthesize willApearOnce=_willApearOnce;
@property(retain, nonatomic) UIView *topBannerView; // @synthesize topBannerView=_topBannerView;
@property(retain, nonatomic) UIView *userGuideView; // @synthesize userGuideView=_userGuideView;
@property(retain, nonatomic) UIView *activityBar; // @synthesize activityBar=_activityBar;
@property(retain, nonatomic) TBSegmentControl *myseg; // @synthesize myseg=_myseg;
@property(retain, nonatomic) UIView *headerSection; // @synthesize headerSection=_headerSection;
@property(retain, nonatomic) TBCartShakeService *cartShakeService; // @synthesize cartShakeService=_cartShakeService;
@property(nonatomic) BOOL isLoadingShakeResult; // @synthesize isLoadingShakeResult=_isLoadingShakeResult;
@property(retain, nonatomic) TBCartShakePopupView *cartShakePopupView; // @synthesize cartShakePopupView=_cartShakePopupView;
@property(retain, nonatomic) TBPromotionPopView *promotionPop; // @synthesize promotionPop=_promotionPop;
@property(retain, nonatomic) HUDActivityView *dataLoadingView; // @synthesize dataLoadingView=_dataLoadingView;
@property(nonatomic) BOOL isShenqiTipClosed; // @synthesize isShenqiTipClosed=_isShenqiTipClosed;
@property(retain, nonatomic) UIView *orderListBar; // @synthesize orderListBar=_orderListBar;
@property(retain, nonatomic) TBCartBagListItem *cartBagListItemForDetail; // @synthesize cartBagListItemForDetail=_cartBagListItemForDetail;
@property(nonatomic) int selectedSeg; // @synthesize selectedSeg=_selectedSeg;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) TBCartBagValidGroupItem *currentGroup; // @synthesize currentGroup=_currentGroup;
@property(retain, nonatomic) TBCartBagListItem *currentItem; // @synthesize currentItem=_currentItem;
@property(retain, nonatomic) NSIndexPath *needUpdateOfindexPath; // @synthesize needUpdateOfindexPath=_needUpdateOfindexPath;
@property(retain, nonatomic) NSString *cartShakeSource; // @synthesize cartShakeSource=_cartShakeSource;
@property(nonatomic) BOOL needDisplayShake; // @synthesize needDisplayShake=_needDisplayShake;
@property(nonatomic) BOOL needDisplayExpiredMassage; // @synthesize needDisplayExpiredMassage=_needDisplayExpiredMassage;
@property(nonatomic) BOOL noNeedRefresh; // @synthesize noNeedRefresh=_noNeedRefresh;
@property(nonatomic) BOOL isLoadFailed; // @synthesize isLoadFailed=_isLoadFailed;
@property(retain, nonatomic) TBBarButtonItem *balanceBaItem; // @synthesize balanceBaItem=_balanceBaItem;
@property(retain, nonatomic) TBShoppingCartStatusInfo *statusInfo; // @synthesize statusInfo=_statusInfo;
@property(retain, nonatomic) TBShopingCartSummarizationView *summarizationView; // @synthesize summarizationView=_summarizationView;
@property(retain, nonatomic) TBShoppingCartTableViewService *tableViewService; // @synthesize tableViewService=_tableViewService;
@property(retain, nonatomic) TBModelStatusHandler *handler; // @synthesize handler=_handler;
@property(retain, nonatomic) TBCartBagService *cartBagService; // @synthesize cartBagService=_cartBagService;
- (void).cxx_destruct;
- (BOOL)canBecomeFirstResponder;
- (void)motionCancelled:(int)arg1 withEvent:(id)arg2;
- (void)motionEnded:(int)arg1 withEvent:(id)arg2;
- (void)motionBegan:(int)arg1 withEvent:(id)arg2;
- (void)cartShakePopupViewNeedEnterGame:(id)arg1;
- (void)cartShakePopupViewNeedGoShopping:(id)arg1;
- (void)cartShakePopupViewNeedShare:(id)arg1;
- (void)cartShakePopupViewTappedCircle:(id)arg1;
- (void)cartShakePopupViewClosed:(id)arg1;
- (void)cartShakePopupViewOpened:(id)arg1;
- (void)dealloc;
- (void)displayLoadingView:(BOOL)arg1;
- (void)hideBigLoadingView;
- (void)showBigLoadingView;
- (id)userTrackArgsForNextPage;
- (void)didSelectInvalidButton;
- (void)didSelectCartListItemToDetail:(id)arg1;
- (void)finishAction;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (float)bottomOffsetForAutoresizeKeyboard;
- (void)deleteCartItem:(id)arg1;
- (void)updateItemToCartBagwithSelectedSKU:(id)arg1;
- (BOOL)needUpdateFullGroup:(id)arg1;
- (void)popSKUCartItem:(id)arg1 andGroup:(id)arg2;
- (void)popPromotion:(id)arg1;
- (void)changeSkuByppPath:(id)arg1;
- (void)reSetSkuSelectedBySkuInfoString:(id)arg1;
- (void)reSetCascadeSkuSelectedBySkuInfoString:(id)arg1;
- (void)popSKUWithData:(id)arg1 andItem:(id)arg2 andGroup:(id)arg3;
- (void)moveItemsToFavList:(id)arg1;
- (void)updateItemNum;
- (void)updateCartItemWithCartId:(id)arg1 toBeNewCount:(unsigned int)arg2 inGroup:(id)arg3;
- (void)loadPromotion:(id)arg1;
- (BOOL)forbidbackPanGestureRecognized;
- (void)selectionTappedAction:(id)arg1;
- (void)invalidTappedAction:(id)arg1;
- (void)closeShenqiRukou;
- (void)shenqiJumpH5;
- (void)updateSeg;
- (void)updateAllCount:(int)arg1;
- (void)promotionFilter:(id)arg1;
- (void)buildHeader;
- (void)buildShenqiRukou;
- (void)buildOrderListBar;
- (void)viewWillAppear:(BOOL)arg1;
- (void)reloadData;
- (void)loadSubView;
- (void)showEmptyViewInView:(id)arg1 frame:(struct CGRect)arg2;
- (void)showEmptyView;
- (void)showErrorViewWithError:(id)arg1;
- (void)showOKView;
- (void)showLoadingView;
- (void)refreshSummarization;
- (void)refreshUIState;
- (BOOL)isEmpty;
- (void)layoutAllViews;
- (void)reloadDataFromInternet;
- (void)balanceTaped:(id)arg1;
- (void)scrollToHead:(id)arg1;
- (void)gotoHome;
- (void)gotoOrderList;
- (id)orderListBarView;
- (void)goShopping;
- (void)activityBarTapped;
- (void)playSound;
- (void)respondsToShake;
- (void)showCartShakePopupView;
- (void)checkShouldShowShakePopupViewOnce;
- (void)closeActivityBar;
- (void)showActivityBar;
- (void)checkShouldShowActivityBar;
- (BOOL)shakeActivityDateAvailable;
- (void)checkShakeActivityAvailable;
- (void)checkShakeActivityAvailableFromServer;
- (void)userGiveUpLogin;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (id)init;
- (SEL)selectorForEmpty;
- (SEL)selectorForError:(id)arg1;
- (void)configPullToRefresh;

@end

