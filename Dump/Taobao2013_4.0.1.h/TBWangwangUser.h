//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSFetchedResultsControllerDelegate.h"
#import "UIAlertViewDelegate.h"

@class NSDate, NSFetchedResultsController, NSString, NSTimer, UpdateDBViewController;

@interface TBWangwangUser : NSObject <UIAlertViewDelegate, NSFetchedResultsControllerDelegate>
{
    BOOL _isForceDisconnectDialogAppeared;
    BOOL _isLogining;
    BOOL _isLogined;
    BOOL _isLoginedOnce;
    NSTimer *_timeoutTimer;
    NSDate *_hibernatedDatetime;
    NSFetchedResultsController *_unreadMessageResultsController;
    NSFetchedResultsController *_unreadWeitaoMessageResultsController;
    NSString *_originalUserId;
    NSString *_wangwangUserId;
    NSString *_password;
    CDUnknownBlockType _loginSuccessHandler;
    CDUnknownBlockType _loginFailedHandler;
    CDUnknownBlockType _loginNeedCheckcodeHandler;
    UpdateDBViewController *_updateVC;
}

+ (id)currentUser;
@property(retain, nonatomic) UpdateDBViewController *updateVC; // @synthesize updateVC=_updateVC;
@property(copy, nonatomic) CDUnknownBlockType loginNeedCheckcodeHandler; // @synthesize loginNeedCheckcodeHandler=_loginNeedCheckcodeHandler;
@property(copy, nonatomic) CDUnknownBlockType loginFailedHandler; // @synthesize loginFailedHandler=_loginFailedHandler;
@property(copy, nonatomic) CDUnknownBlockType loginSuccessHandler; // @synthesize loginSuccessHandler=_loginSuccessHandler;
@property(retain, nonatomic) NSDate *hibernatedDatetime; // @synthesize hibernatedDatetime=_hibernatedDatetime;
@property(readonly, nonatomic) BOOL isLoginedOnce; // @synthesize isLoginedOnce=_isLoginedOnce;
@property(readonly, nonatomic) BOOL isLogined; // @synthesize isLogined=_isLogined;
@property(readonly, nonatomic) BOOL isLogining; // @synthesize isLogining=_isLogining;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *wangwangUserId; // @synthesize wangwangUserId=_wangwangUserId;
@property(copy, nonatomic) NSString *originalUserId; // @synthesize originalUserId=_originalUserId;
- (void).cxx_destruct;
- (void)controllerDidChangeContent:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)sendAudioMessageWithContactId:(id)arg1 audioData:(id)arg2 duration:(int)arg3 mimeType:(id)arg4 audioWavData:(id)arg5;
- (void)sendTextMessageWithContactId:(id)arg1 message:(id)arg2;
- (id)recentContactList;
- (void)autoLogout;
- (void)logout;
- (void)loginWithCheckCode:(id)arg1 checkCodeURL:(id)arg2;
- (void)autoLogin;
- (void)loginWithSuccessHandler:(CDUnknownBlockType)arg1 failedHandler:(CDUnknownBlockType)arg2 needCheckcodeHandler:(CDUnknownBlockType)arg3;
- (void)login;
- (void)_loginWithToken:(id)arg1;
- (void)loginWithToken:(id)arg1;
- (void)reset;
- (void)clearUnreadMessageNumber;
@property(readonly, nonatomic) unsigned int unreadWeitaoMessageCount;
@property(readonly, nonatomic) unsigned int unreadMessageCount;
@property(readonly, nonatomic) NSString *signature;
@property(readonly, nonatomic) NSString *avatarImageURL;
@property(readonly, nonatomic) NSString *nickName;
@property(readonly, nonatomic) NSFetchedResultsController *unreadWeitaoMessageResultsController;
@property(readonly, nonatomic) NSFetchedResultsController *unreadMessageResultsController;
@property(readonly, nonatomic) NSTimer *timeoutTimer;
- (void)receiveFinishLoginCheckCodeNotification:(id)arg1;
- (void)receiveGiveupLoginCheckCodeNotification:(id)arg1;
- (void)receiveLoginNotification:(id)arg1;
- (void)receiveBeginLoginNotification:(id)arg1;
- (void)deleteWeitaoSession:(id)arg1;
- (void)receiveReachabilityChangeNotification:(id)arg1;
- (void)receiveForceDisconnectNotification:(id)arg1;
- (void)forceDisconnect;
- (void)didSuccessLogin;
- (void)didFailLoginWithError:(id)arg1;
- (void)alertLoginFailError:(id)arg1;
- (void)didFailLoginCheckCode;
- (void)didGiveupLoginCheckCode;
- (void)didNeedLoginCheckCode:(id)arg1;
- (void)didTimeoutLogin;
- (void)handleNeedReloginError;
- (void)_loginWithTokenFlag:(int)arg1 checkCode:(id)arg2 checkCodeURL:(id)arg3;
- (void)loginWithTokenFlag:(int)arg1 checkCode:(id)arg2 checkCodeURL:(id)arg3;
- (id)init;
- (void)dealloc;

@end

