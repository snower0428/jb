//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSNotificationCenter, NSString, NSThread, NSURL;

@interface AudioStreamer : NSObject
{
    NSURL *url;
    struct OpaqueAudioQueue *audioQueue;
    struct OpaqueAudioFileStreamID *audioFileStream;
    struct AudioStreamBasicDescription asbd;
    NSThread *internalThread;
    struct AudioQueueBuffer *audioQueueBuffer[16];
    struct AudioStreamPacketDescription packetDescs[512];
    unsigned int fillBufferIndex;
    unsigned long packetBufferSize;
    unsigned long bytesFilled;
    unsigned long packetsFilled;
    _Bool inuse[16];
    int buffersUsed;
    NSDictionary *httpHeaders;
    NSString *fileExtension;
    int state;
    int laststate;
    int stopReason;
    int errorCode;
    long err;
    _Bool discontinuous;
    struct _opaque_pthread_mutex_t {
        long __sig;
        char __opaque[40];
    } queueBuffersMutex;
    struct _opaque_pthread_cond_t {
        long __sig;
        char __opaque[24];
    } queueBufferReadyCondition;
    struct __CFReadStream *stream;
    NSNotificationCenter *notificationCenter;
    unsigned long bitRate;
    int dataOffset;
    int fileLength;
    int seekByteOffset;
    unsigned long long audioDataByteCount;
    unsigned long long processedPacketsCount;
    unsigned long long processedPacketsSizeTotal;
    double seekTime;
    BOOL seekWasRequested;
    double requestedSeekTime;
    double sampleRate;
    double packetDuration;
    double lastProgress;
    BOOL pausedByInterruption;
    BOOL _shouldDisplayAlertOnError;
}

+ (unsigned long)hintForFileExtension:(id)arg1;
+ (id)stringForErrorCode:(int)arg1;
@property(nonatomic) BOOL shouldDisplayAlertOnError; // @synthesize shouldDisplayAlertOnError=_shouldDisplayAlertOnError;
@property(copy) NSString *fileExtension; // @synthesize fileExtension;
@property(readonly) NSDictionary *httpHeaders; // @synthesize httpHeaders;
@property unsigned long bitRate; // @synthesize bitRate;
@property int laststate; // @synthesize laststate;
@property int errorCode; // @synthesize errorCode;
- (void)handleInterruptionChangeToState:(id)arg1;
- (void)handlePropertyChangeForQueue:(struct OpaqueAudioQueue *)arg1 propertyID:(unsigned long)arg2;
- (void)handlePropertyChange:(id)arg1;
- (void)handleBufferCompleteForQueue:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)handleAudioPackets:(const void *)arg1 numberBytes:(unsigned long)arg2 numberPackets:(unsigned long)arg3 packetDescriptions:(struct AudioStreamPacketDescription *)arg4;
- (void)handlePropertyChangeForFileStream:(struct OpaqueAudioFileStreamID *)arg1 fileStreamPropertyID:(unsigned long)arg2 ioFlags:(unsigned int *)arg3;
- (void)createQueue;
- (void)enqueueBuffer;
- (void)handleReadFromStream:(struct __CFReadStream *)arg1 eventType:(unsigned long)arg2;
- (void)stop;
- (void)pause;
@property(readonly) double duration;
- (double)calculatedBitRate;
@property(readonly) double progress;
- (void)seekToTime:(double)arg1;
- (void)internalSeekToTime:(double)arg1;
- (void)start;
- (void)startInternal;
- (BOOL)openReadStream;
- (BOOL)isAborted;
- (BOOL)isIdle;
- (BOOL)isWaiting;
- (BOOL)isPaused;
- (BOOL)isPlaying;
@property int state; // @synthesize state;
- (void)mainThreadStateNotification;
- (void)failWithErrorCode:(int)arg1;
- (void)presentAlertWithTitle:(id)arg1 message:(id)arg2;
- (BOOL)runLoopShouldExit;
- (BOOL)isFinishing;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

