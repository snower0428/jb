//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"

@class AVCaptureDeviceInput, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, CALayer, NSString, kkCaptureSession;

@interface AVCamCaptureManager_HY : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
{
    kkCaptureSession *_session;
    int _orientation;
    int _mirroringMode;
    AVCaptureDeviceInput *_videoInput;
    AVCaptureStillImageOutput *_stillImageOutput;
    AVCaptureVideoDataOutput *_videoDataOutput;
    unsigned int _backgroundRecordingID;
    id <AVCamCaptureManager_HYDelegate> _delegate;
    struct dispatch_queue_s *_capQueue;
    CALayer *_cameraLayer;
}

+ (id)connectionWithMediaType:(id)arg1 fromConnections:(id)arg2;
+ (id)sharedInstance;
@property(nonatomic) CALayer *cameraLayer; // @synthesize cameraLayer=_cameraLayer;
@property(nonatomic) id <AVCamCaptureManager_HYDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned int backgroundRecordingID; // @synthesize backgroundRecordingID=_backgroundRecordingID;
@property(retain, nonatomic) AVCaptureVideoDataOutput *videoDataOutput; // @synthesize videoDataOutput=_videoDataOutput;
@property(retain, nonatomic) AVCaptureStillImageOutput *stillImageOutput; // @synthesize stillImageOutput=_stillImageOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *videoInput; // @synthesize videoInput=_videoInput;
@property(nonatomic) int mirroringMode; // @synthesize mirroringMode=_mirroringMode;
@property(nonatomic) int orientation; // @synthesize orientation=_orientation;
@property(retain, nonatomic) kkCaptureSession *session; // @synthesize session=_session;
- (void)forceFocus;
- (id)audioChannel;
- (BOOL)supportsMirroring;
- (void)setConnectionWithMediaType:(id)arg1 enabled:(BOOL)arg2;
@property(nonatomic) NSString *sessionPreset; // @dynamic sessionPreset;
- (void)exposureAtPoint:(struct CGPoint)arg1;
- (void)focusAtPoint:(struct CGPoint)arg1;
- (BOOL)adjustingFocus;
@property(nonatomic) int whiteBalanceMode; // @dynamic whiteBalanceMode;
- (BOOL)hasWhiteBalance;
@property(nonatomic) int exposureMode; // @dynamic exposureMode;
- (BOOL)hasExposure;
@property(nonatomic) int focusMode; // @dynamic focusMode;
- (BOOL)hasFocus;
@property(nonatomic) int torchMode; // @dynamic torchMode;
- (BOOL)hasTorch;
@property(nonatomic) int flashMode; // @dynamic flashMode;
- (BOOL)hasFlash;
- (unsigned int)cameraCount;
- (BOOL)cameraToggle;
- (void)captureStillImage;
- (struct opaqueCMSampleBuffer *)cropSample:(struct opaqueCMSampleBuffer *)arg1 withRect:(struct CGRect)arg2;
- (void)endTiming;
- (void)currentTiming:(id)arg1;
- (void)startTiming;
- (void)captureFullResolutionPhoto:(BOOL)arg1;
- (BOOL)setupSessionWithPreset:(id)arg1;
- (void)setupCameraLayer;
- (id)getSession;
- (void)dealloc;
- (void)cleanStaticInstance;
- (void)stopRunning;
- (void)startRunning;
- (BOOL)isRunning;
- (id)init;
- (id)backFacingCamera;
- (id)frontFacingCamera;
- (id)cameraWithPosition:(int)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;

// Remaining properties
@property(readonly, nonatomic, getter=isRecording) BOOL recording; // @dynamic recording;

@end

