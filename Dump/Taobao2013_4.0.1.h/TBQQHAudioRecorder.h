//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVAudioPlayerDelegate.h"
#import "AVAudioRecorderDelegate.h"

@class AVAudioPlayer, AVAudioRecorder, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface TBQQHAudioRecorder : NSObject <AVAudioRecorderDelegate, AVAudioPlayerDelegate>
{
    NSURL *recordedTmpFile;
    AVAudioRecorder *recorder;
    AVAudioPlayer *avAudioPlayer;
    unsigned int lastPlayIdentifier;
    BOOL earphoneModeEnabled;
    BOOL isForceEarphoneMode;
    CDUnknownBlockType onSwitchToSpeaker;
    CDUnknownBlockType onSwitchToEarphone;
    CDUnknownBlockType onPlayDidStopped;
    NSString *recordedFilePath;
}

+ (id)sharedAudioRecorder;
@property(readonly, nonatomic) NSString *recordedFilePath; // @synthesize recordedFilePath;
@property(nonatomic) BOOL isForceEarphoneMode; // @synthesize isForceEarphoneMode;
@property(copy, nonatomic) CDUnknownBlockType onPlayDidStopped; // @synthesize onPlayDidStopped;
@property(copy, nonatomic) CDUnknownBlockType onSwitchToEarphone; // @synthesize onSwitchToEarphone;
@property(copy, nonatomic) CDUnknownBlockType onSwitchToSpeaker; // @synthesize onSwitchToSpeaker;
@property(nonatomic) BOOL earphoneModeEnabled; // @synthesize earphoneModeEnabled;
@property(readonly, nonatomic) unsigned int lastPlayIdentifier; // @synthesize lastPlayIdentifier;
- (void).cxx_destruct;
- (double)currentTime:(unsigned int)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2;
- (void)stopPlay;
- (BOOL)isPlaying;
- (BOOL)isPlaying:(unsigned int)arg1;
- (void)sendStatus:(int)arg1;
- (void)playWave:(id)arg1 playIdentifier:(unsigned int)arg2;
- (void)play:(id)arg1 playIdentifier:(unsigned int)arg2;
- (void)playAmr:(id)arg1 playIdentifier:(unsigned int)arg2;
- (void)keepLastPlayMode;
- (id)decodeAmr:(id)arg1;
- (id)encodeWave:(id)arg1;
- (float)peakPowerForChannel;
- (BOOL)isRecording;
- (id)stopRecord;
- (void)startRecord;
- (double)getAudioTime:(id)arg1;
- (void)audioUnActive;
- (void)audioActive;
- (void)replay;
- (void)sensorStateChange:(id)arg1;
- (void)initAudioSession;
- (void)setProximityMonitoringEnabled:(BOOL)arg1;
- (id)init;
- (void)dealloc;

@end

