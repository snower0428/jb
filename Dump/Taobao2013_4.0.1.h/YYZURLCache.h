//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSURLCache.h"

#import "ASIHTTPRequestDelegate.h"
#import "WebViewNSURLCacheProtocol.h"

@class ASINetworkQueue, NSMutableArray, NSMutableDictionary, NSString;

@interface YYZURLCache : NSURLCache <ASIHTTPRequestDelegate, WebViewNSURLCacheProtocol>
{
    BOOL _isHavRegRule;
    BOOL _isOSVersionSupportCache;
    NSString *_baseFolder;
    ASINetworkQueue *_requestQueue;
    NSMutableDictionary *_responseDictionary;
    NSMutableDictionary *_responseConfigDictionary;
    NSMutableArray *_responseArray;
    unsigned int _currentUse;
}

+ (id)getResourcePathInResourceDic:(id)arg1;
+ (id)isFireRule:(id)arg1 withRequestUrl:(id)arg2;
+ (id)parseRule:(id)arg1;
+ (id)buildRuleFromConfig:(id)arg1 withRuleKey:(id)arg2;
+ (BOOL)isHavRegRule;
+ (void)addDynamicRuleForWebApp:(id)arg1;
+ (void)setSharedURLCache:(id)arg1;
+ (id)instance;
@property(nonatomic) BOOL isOSVersionSupportCache; // @synthesize isOSVersionSupportCache=_isOSVersionSupportCache;
@property BOOL isHavRegRule; // @synthesize isHavRegRule=_isHavRegRule;
@property unsigned int currentUse; // @synthesize currentUse=_currentUse;
@property(retain) NSMutableArray *responseArray; // @synthesize responseArray=_responseArray;
@property(retain) NSMutableDictionary *responseConfigDictionary; // @synthesize responseConfigDictionary=_responseConfigDictionary;
@property(retain) NSMutableDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
@property(retain, nonatomic) ASINetworkQueue *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(retain, nonatomic) NSString *baseFolder; // @synthesize baseFolder=_baseFolder;
- (void).cxx_destruct;
- (id)getFileFullName:(id)arg1 withVersion:(id)arg2;
- (BOOL)isUseDefaultRule;
- (void)createFolder:(id)arg1;
- (void)checkMuchFolderExist;
- (void)checkCommonFolderExist;
- (unsigned int)getFileLenghFromRequestURL:(id)arg1;
- (BOOL)fileLenghOK:(unsigned int)arg1 withMatchLength:(unsigned int)arg2;
- (id)buildNSCachedURLResponse:(id)arg1 forRequest:(id)arg2 withConfig:(id)arg3;
- (void)resourceDataTrackTask:(id)arg1 withCustomType:(int)arg2 withError:(id)arg3;
- (void)resourceDataTrackTaskForCacheResource:(id)arg1 withStartTime:(double)arg2 withEndTime:(double)arg3;
- (void)saveCookieForRequest:(id)arg1;
- (id)buildCookieForRequest:(id)arg1;
- (void)afterProcessRequestHeader:(id)arg1;
- (id)buildRequestHeader:(id)arg1;
- (void)performWVURLRequestDelegateFailed:(id)arg1 withNSCachedURLResponse:(id)arg2 withError:(id)arg3;
- (void)performWVURLRequestDelegate:(id)arg1 withNSCachedURLResponse:(id)arg2;
- (void)requestFailed:(id)arg1;
- (void)requestFinished:(id)arg1;
- (void)requestStarted:(id)arg1;
- (id)getResource:(id)arg1 withCheckResult:(id)arg2;
- (void)prepareSaveFolder;
- (id)getResourceSavePath:(id)arg1 withConfig:(id)arg2;
- (id)getCachedResponseInCacheKey:(id)arg1 withConfig:(id)arg2;
- (void)initCacheInstance;
- (void)responseConfigDictionRemoveAll;
- (void)responseDictionaryRemoveAll;
- (void)responseArrayRemoveAll;
- (void)responseConfigDictionaryRemove:(id)arg1;
- (void)responseDictionaryRemove:(id)arg1;
- (void)responseArrayRemove:(id)arg1;
- (void)responseConfigDictionarySetObj:(id)arg1 withKey:(id)arg2;
- (void)responseDictionarySetObj:(id)arg1 withKey:(id)arg2;
- (void)responseArraySetObj:(id)arg1;
- (void)removeAllCachedResponsesInMem;
- (void)removeAllCachedResponsesWithSD;
- (void)removeAllCachedResponsesInMemAndSD;
- (void)removeAllCachedResponses;
- (void)removeCachedResponseForRequestInCache:(id)arg1;
- (void)removeCachedResponseForRequest:(id)arg1;
- (void)storeCachedResponseInCache:(id)arg1 forRequest:(id)arg2 withConfig:(id)arg3;
- (void)storeCachedResponse:(id)arg1 forRequest:(id)arg2;
- (id)searchResourceUseStrategy:(id)arg1;
- (id)searchResourceInMemeory:(id)arg1;
- (void)initMemeoryCache;
- (id)returnFailedNSCachedURLResponse:(id)arg1 forRequest:(id)arg2 withError:(id)arg3;
- (id)returnSuccessNSCachedURLResponse:(id)arg1 forRequest:(id)arg2;
- (id)cachedResponseForRequest:(id)arg1;
- (id)checkURLCacheRule:(id)arg1;
- (void)dealloc;
- (void)processPrePackageRes;
- (void)initCache;

@end

