//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSDate, NSError, NSMutableData, NSString, NSURL, NSURLResponse;

__attribute__((visibility("hidden")))
@interface YMRequest : NSObject
{
    int _requestTag;
    double _requestTimeout;
    NSString *_requestMethod;
    NSURL *_requestURL;
    NSData *_requestBody;
    NSMutableData *_data;
    NSURLResponse *_response;
    NSError *_error;
    CDUnknownBlockType _completion_block;
    BOOL _hasRequested;
    int _statusCode;
    int _errorCode;
    NSDate *_firstResponseTimestamp;
    NSDate *_finishTimestamp;
    NSDate *_requestTimestamp;
}

+ (id)requestWithURL:(id)arg1;
+ (id)request;
@property(retain, nonatomic) NSDate *requestTimestamp; // @synthesize requestTimestamp=_requestTimestamp;
@property(retain, nonatomic) NSDate *finishTimestamp; // @synthesize finishTimestamp=_finishTimestamp;
@property(retain, nonatomic) NSDate *firstResponseTimestamp; // @synthesize firstResponseTimestamp=_firstResponseTimestamp;
@property(nonatomic) int errorCode; // @synthesize errorCode=_errorCode;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
@property(nonatomic) BOOL hasRequested; // @synthesize hasRequested=_hasRequested;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSData *requestBody; // @synthesize requestBody=_requestBody;
@property(retain, nonatomic) NSURL *requestURL; // @synthesize requestURL=_requestURL;
@property(retain, nonatomic) NSString *requestMethod; // @synthesize requestMethod=_requestMethod;
@property(nonatomic) double requestTimeout; // @synthesize requestTimeout=_requestTimeout;
@property int requestTag; // @synthesize requestTag=_requestTag;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)dealloc;
- (BOOL)shouldReport;
- (BOOL)hasError;
- (void)requestAsynchronouslyWithCompletionUsingBlock:(CDUnknownBlockType)arg1;
- (id)init;
- (void)_requestFinished:(BOOL)arg1;
- (void)_requestAsynchronously;

@end

