/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class PFACL, PFMulticastDelegate, NSString, PFTaskQueue, NSMutableDictionary, NSMutableArray, NSDate, NSObject;

@interface PFObject : XXUnknownSuperclass {
	BOOL dirty;
	NSMutableArray* operationSetQueue;
	NSMutableDictionary* estimatedData;
	NSObject* lock;
	BOOL hasBeenFetched;
	NSMutableDictionary* dataAvailability;
	NSMutableDictionary* serverData;
	NSMutableDictionary* hashedObjectsCache;
	NSDate* updatedAt;
	NSDate* createdAt;
	NSString* localId;
	NSString* objectId;
	NSString* parseClassName;
	BOOL createdAsPointer;
	PFMulticastDelegate* saveDelegate;
	PFTaskQueue* taskQueue;
}
@property(retain, nonatomic) PFTaskQueue* taskQueue;
@property(retain, nonatomic) NSString* localId;
@property(retain, nonatomic) PFMulticastDelegate* saveDelegate;
@property(retain, nonatomic) PFACL* ACL;
@property(retain, nonatomic) NSDate* createdAt;
@property(retain, nonatomic) NSDate* updatedAt;
@property(retain, nonatomic) NSString* objectId;
@property(readonly, assign) NSString* parseClassName;
+(BOOL)resolveInstanceMethod:(SEL)method;
+(void)deleteAllInBackground:(id)background block:(id)block;
+(void)deleteAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)deleteAllInBackground:(id)background;
+(BOOL)deleteAll:(id)all error:(id*)error;
+(BOOL)deleteAll:(id)all;
+(void)saveAllInBackground:(id)background block:(id)block;
+(void)saveAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)saveAllInBackground:(id)background;
+(BOOL)saveAll:(id)all error:(id*)error;
+(BOOL)saveAll:(id)all;
+(void)fetchAllIfNeededInBackground:(id)background block:(id)block;
+(void)fetchAllIfNeededInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)fetchAllInBackground:(id)background block:(id)block;
+(void)fetchAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)fetchAll:(id)all error:(id*)error;
+(id)fetchAllAsync:(id)async;
+(void)fetchAllIfNeeded:(id)needed error:(id*)error;
+(id)fetchAllIfNeededAsync:(id)async;
+(void)fetchAllIfNeeded:(id)needed;
+(void)fetchAll:(id)all;
+(void)updateArray:(id)array withResultsOfFetchAll:(id)fetchAll forceFetch:(BOOL)fetch;
+(id)toObjectIdArray:(id)objectIdArray omitObjectsWithData:(BOOL)data;
+(void)assertSubclassIsRegistered:(Class)registered;
+(id)query;
+(void)registerSubclass;
+(id)objectWithClassName:(id)className dictionary:(id)dictionary;
+(id)objectWithoutDataWithClassName:(id)className objectId:(id)anId;
+(id)objectWithClassName:(id)className;
+(void)initialize;
+(id)objectWithoutDataWithObjectId:(id)objectId;
+(id)object;
+(id)objectFromDataFile:(id)dataFile;
+(void)deleteDataFile:(id)file;
+(void)validateClassName:(id)name;
+(void)deepSaveEventually:(id)eventually;
+(id)deepSaveAsync:(id)async withSessionToken:(id)sessionToken;
+(id)deleteAllAsync:(id)async withSessionToken:(id)sessionToken;
+(BOOL)canBeSerializedAsValue:(id)value afterSaving:(id)saving error:(id*)error;
+(void)collectDirtyChildren:(id)children children:(id)children2 files:(id)files;
+(void)collectDirtyChildren:(id)children children:(id)children2 files:(id)files seen:(id)seen seenNew:(id)aNew;
+(id)enqueue:(id)enqueue forObjects:(id)objects;
+(void)unregisterSubclass:(Class)subclass;
+(id)objectWithoutDataWithClassName:(id)className localId:(id)anId;
+(id)objectWithClassName:(id)className isPointer:(BOOL)pointer;
-(void)setValue:(id)value forUndefinedKey:(id)undefinedKey;
-(id)valueForUndefinedKey:(id)undefinedKey;
-(void)dealloc;
-(id)description;
-(id)allKeys;
-(void)incrementKey:(id)key byAmount:(id)amount;
-(void)incrementKey:(id)key;
-(void)removeObjectsInArray:(id)array forKey:(id)key;
-(void)removeObject:(id)object forKey:(id)key;
-(void)addUniqueObjectsFromArray:(id)array forKey:(id)key;
-(void)addUniqueObject:(id)object forKey:(id)key;
-(void)addObjectsFromArray:(id)array forKey:(id)key;
-(void)addObject:(id)object forKey:(id)key;
-(void)removeObjectForKey:(id)key;
-(id)relationForKey:(id)key;
-(id)relationforKey:(id)key;
-(id)objectForKeyedSubscript:(id)keyedSubscript;
-(id)objectForKey:(id)key;
-(void)setObject:(id)object forKeyedSubscript:(id)keyedSubscript;
-(void)setObject:(id)object forKey:(id)key;
-(void)fetchIfNeededInBackgroundWithBlock:(id)block;
-(void)fetchIfNeededInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)fetchIfNeeded:(id*)needed;
-(id)fetchIfNeeded;
-(void)fetchInBackgroundWithBlock:(id)block;
-(void)fetchInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(BOOL)isDataAvailable;
-(void)fetch:(id*)fetch;
-(void)fetch;
-(void)refreshInBackgroundWithBlock:(id)block;
-(void)refreshInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)refresh:(id*)refresh;
-(void)refresh;
-(BOOL)isDirtyForKey:(id)key;
-(BOOL)isDirty;
-(void)deleteEventually;
-(void)saveEventually:(id)eventually;
-(void)saveEventually;
-(void)saveInBackgroundWithBlock:(id)block;
-(void)saveInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)saveInBackground;
-(BOOL)save:(id*)save;
-(BOOL)save;
-(void)deleteInBackgroundWithBlock:(id)block;
-(void)deleteInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)deleteInBackground;
-(BOOL)delete:(id*)aDelete;
-(BOOL)delete;
-(id)initWithClassName:(id)className;
-(BOOL)needsDefaultACL;
-(void)setDefaultValues;
-(id)ACLWithoutCopying;
-(void)unregisterSaveListener:(id)listener;
-(void)registerSaveListener:(id)listener;
-(id)displayClassName;
-(id)displayObjectId;
-(id)constructDeleteCommand:(BOOL)command sessionToken:(id)token;
-(id)constructRefreshCommand:(id)command;
-(id)constructSaveCommandWithServerOperation:(id)serverOperation changes:(id)changes sessionToken:(id)token;
-(id)constructSaveCommand:(id)command sessionToken:(id)token;
-(id)deleteAsync:(id)async;
-(id)deleteAsync;
-(id)fetchAsync:(id)async;
-(id)fetchAsync;
-(id)saveAsync:(id)async;
-(id)saveAsync;
-(void)startSave;
-(id)handleDeleteResult:(id)result;
-(id)handleFetchResult:(id)result;
-(id)handleSaveResult:(id)result error:(id*)error;
-(id)mergeFromServer:(id)server withCompleteData:(BOOL)completeData;
-(id)mergeAfterSave:(id)save;
-(void)removeOldKeysAfterFetch:(id)fetch;
-(id)mergeAfterFetch:(id)fetch withCompleteData:(BOOL)completeData;
-(id)mergeFromObject:(id)object;
-(void)rebuildEstimatedData;
-(void)applyOperations:(id)operations toDictionary:(id)dictionary;
-(id)unsavedChanges;
-(void)performOperation:(id)operation forKey:(id)key;
-(id)convertToDictionaryForSaving:(id)saving;
-(void)serializeToDataFile:(id)dataFile;
-(id)convertToDictionaryForDataFile;
-(void)resolveLocalId;
-(id)getOrCreateLocalId;
-(void)checkSaveParams;
-(void)checkDeleteParams;
-(BOOL)isDataAvailableForKey:(id)key;
-(void)setHasBeenFetched:(BOOL)fetched;
-(void)checkForChangesToMutableContainers;
-(void)checkForChangesToMutableContainer:(id)mutableContainer forKey:(id)key;
-(void)checkpointMutableContainer:(id)container;
-(void)checkpointAllMutableContainers;
-(BOOL)isDirty:(BOOL)dirty;
-(void)saveChildrenEventually;
-(id)saveChildrenAsync:(id)async;
-(BOOL)canBeSerializedAfterSaving:(id)saving error:(id*)error;
-(void)waitUntilFinished;
-(id)lock;
-(id)init;
-(id)initWithClassName:(id)className isPointer:(BOOL)pointer;
@end

