/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSString, NSOperation, NSMutableDictionary, NSMutableArray;

@interface PFQuery : XXUnknownSuperclass {
	NSOperation* cancellationToken;
	NSMutableDictionary* where;
	NSMutableArray* include;
	NSMutableArray* selectedKeys;
	NSString* order;
	BOOL trace;
	NSString* parseClassName;
	int limit;
	int skip;
	int cachePolicy;
	NSMutableDictionary* _extraOptions;
	double maxCacheAge;
}
@property(retain, nonatomic) NSMutableDictionary* extraOptions;
@property(readonly, assign, nonatomic) NSString* order;
@property(assign, nonatomic) BOOL trace;
@property(assign) double maxCacheAge;
@property(assign) int cachePolicy;
@property(assign, nonatomic) int skip;
@property(assign, nonatomic) int limit;
@property(retain, nonatomic) NSString* parseClassName;
+(id)queryForUser;
+(id)getUserObjectWithId:(id)anId error:(id*)error;
+(id)getUserObjectWithId:(id)anId;
+(id)orQueryWithSubqueries:(id)subqueries;
+(id)queryWithClassName:(id)className predicate:(id)predicate;
+(id)queryWithClassName:(id)className;
+(id)getObjectOfClass:(id)aClass objectId:(id)anId error:(id*)error;
+(id)getObjectOfClass:(id)aClass objectId:(id)anId;
+(void)clearAllCachedResults;
+(id)maybeEncodeSubQuery:(id)query;
+(id)queryWithClassName:(id)className normalizedPredicate:(id)predicate;
+(void)assertKeyPathConstant:(id)constant;
+(id)normalizePredicate:(id)predicate;
+(id)hoistCommonPredicates:(id)predicates;
+(id)normalizeToDNF:(id)dnf;
+(void)assertNoPredicateModifiers:(id)modifiers;
+(id)asOrOfAnds:(id)ands;
+(id)reverseYodaConditions:(id)conditions;
+(id)removeBetween:(id)between;
+(id)removeNegation:(id)negation;
+(id)negatePredicate:(id)predicate;
+(id)mapPredicate:(id)predicate compoundBlock:(id)block comparisonBlock:(id)block3;
+(id)regexForString:(id)string;
-(void)dealloc;
-(void)cancel;
-(void)getObjectInBackgroundWithId:(id)anId block:(id)block;
-(void)getObjectInBackgroundWithId:(id)anId target:(id)target selector:(SEL)selector;
-(void)countObjectsInBackgroundWithBlock:(id)block;
-(void)getFirstObjectInBackgroundWithBlock:(id)block;
-(void)findObjectsInBackgroundWithBlock:(id)block;
-(id)getObjectWithId:(id)anId error:(id*)error;
-(id)getObjectWithId:(id)anId;
-(void)setupForGetObject:(id)getObject;
-(void)countObjectsInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)clearCachedResult;
-(BOOL)hasCachedResult;
-(int)countObjects:(id*)objects;
-(int)countObjects;
-(void)getFirstObjectInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)getFirstObject:(id*)object;
-(id)getFirstObject;
-(void)findObjectsInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)findObjects:(id*)objects;
-(id)findObjects;
-(id)countAsync:(int)async after:(id)after;
-(id)countAsync:(int)async;
-(id)cacheKeyForFindCommand;
-(id)findAsync:(int)async after:(id)after;
-(id)findAsync:(int)async;
-(id)findAsync;
-(id)constructFindCommand:(id)command;
-(id)constructFindParams;
-(void)markAsRunning:(id)running;
-(void)checkIfCommandIsRunning;
-(void)whereComparisonPredicate:(id)predicate;
-(void)selectKeys:(id)keys;
-(void)includeKey:(id)key;
-(void)redirectClassNameForKey:(id)key;
-(void)whereRelatedToObject:(id)object fromKey:(id)key;
-(void)whereKey:(id)key doesNotMatchKey:(id)key2 inQuery:(id)query;
-(void)whereKey:(id)key matchesKey:(id)key2 inQuery:(id)query;
-(void)whereKey:(id)key doesNotMatchQuery:(id)query;
-(void)whereKey:(id)key matchesQuery:(id)query;
-(void)whereKeyDoesNotExist:(id)exist;
-(void)whereKeyExists:(id)exists;
-(void)whereKey:(id)key hasSuffix:(id)suffix;
-(void)whereKey:(id)key hasPrefix:(id)prefix;
-(void)whereKey:(id)key containsString:(id)string;
-(void)whereKey:(id)key matchesRegex:(id)regex modifiers:(id)modifiers;
-(void)whereKey:(id)key matchesRegex:(id)regex;
-(void)whereKey:(id)key withinGeoBoxFromSouthwest:(id)southwest toNortheast:(id)northeast;
-(void)whereKey:(id)key nearGeoPoint:(id)point withinKilometers:(double)kilometers;
-(void)whereKey:(id)key nearGeoPoint:(id)point withinMiles:(double)miles;
-(void)whereKey:(id)key nearGeoPoint:(id)point withinRadians:(double)radians;
-(void)whereKey:(id)key nearGeoPoint:(id)point;
-(void)whereKey:(id)key containsAllObjectsInArray:(id)array;
-(void)whereKey:(id)key notContainedIn:(id)anIn;
-(void)whereKey:(id)key containedIn:(id)anIn;
-(void)whereKey:(id)key notEqualTo:(id)to;
-(void)whereKey:(id)key lessThanOrEqualTo:(id)to;
-(void)whereKey:(id)key lessThan:(id)than;
-(void)whereKey:(id)key greaterThanOrEqualTo:(id)to;
-(void)whereKey:(id)key greaterThan:(id)than;
-(void)whereKey:(id)key equalTo:(id)to;
-(void)whereKey:(id)key multipleConditions:(id)conditions;
-(void)whereKey:(id)key condition:(id)condition object:(id)object;
-(void)orderBySortDescriptors:(id)descriptors;
-(void)orderBySortDescriptor:(id)descriptor;
-(void)addDescendingOrder:(id)order;
-(void)orderByDescending:(id)descending;
-(void)addAscendingOrder:(id)order;
-(void)orderByAscending:(id)ascending;
-(id)initWithClassName:(id)className;
@end

