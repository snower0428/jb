/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SonicWaveNFCHandler.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "SafepayDelegate.h"

@class PollingQueryEngine, RMIOperation, NSString;
@protocol RequestDelegate, EventDelegate;

@interface EventManager : XXUnknownSuperclass <SonicWaveNFCHandler, SafepayDelegate> {
	int quickPayState;
	int connectType;
	unsigned char hasOtpSeed;
	NSString* _dyidForQuery;
	BOOL _isStopQuery;
@private
	id<EventDelegate> delegate;
	NSString* uniqueID;
	NSString* payTradeNo;
	RMIOperation* tradePayOperation;
	RMIOperation* uniqueIDOperation;
	RMIOperation* autoPayOperation;
	id<RequestDelegate> requestDelegate;
	PollingQueryEngine* queryEngine;
	double uniqueIDGotTime;
	double startActionTime;
}
@property(assign, nonatomic) PollingQueryEngine* queryEngine;
@property(assign) id<RequestDelegate> requestDelegate;
@property(assign, nonatomic) RMIOperation* autoPayOperation;
@property(assign, nonatomic) RMIOperation* uniqueIDOperation;
@property(assign, nonatomic) RMIOperation* tradePayOperation;
@property(assign, nonatomic) double uniqueIDGotTime;
@property(retain, nonatomic) NSString* payTradeNo;
@property(retain, nonatomic) NSString* uniqueID;
@property(assign, nonatomic) int connectType;
@property(assign, nonatomic) double startActionTime;
@property(assign, nonatomic) unsigned char hasOtpSeed;
@property(assign, nonatomic) int quickPayState;
@property(assign) id<EventDelegate> delegate;
-(void)stopQuery;
-(void)doStartQueryWithDyid:(id)dyid;
-(void)startQueryWithDyid:(id)dyid;
-(void)dealloc;
-(void)onHeadsetOff;
-(void)onHeadsetOn;
-(void)onReceiveDataInfo:(id)info;
-(void)onReceiveDataFailed:(int)failed;
-(void)onReceiveDataTimeout;
-(void)onDataReceived:(id)received;
-(void)onReceiveDataStarted;
-(void)onSendDataInfo:(id)info;
-(void)onSendDataFailed:(int)failed;
-(void)onSendDataTimeout;
-(void)onSendDataStarted;
-(void)stopSendWave;
-(void)sendUniqueIDByWave:(id)wave iTimeoutSeconds:(int)seconds;
-(void)received:(id)received;
-(void)connectError:(id)error;
-(void)disConnect:(id)connect;
-(void)didConnect:(id)connect;
-(void)ObtainDynamicIdOperationDidFinsih:(id)obtainDynamicIdOperation;
-(void)safepayDidFinishWithResult:(id)safepay;
-(void)callSafepay:(id)safepay;
-(void)callSafepayFast:(id)fast withPerfectFlag:(BOOL)perfectFlag;
-(void)autoPayOperationDidFinsih:(id)autoPayOperation;
-(void)displayAutopaySuccFinish:(id)finish;
-(void)autoPay:(id)pay;
-(void)createTradeFinish:(id)finish;
-(void)onCreateFastPayAndAutoPayFinish:(id)finish;
-(void)addOtpLog:(id)log indexValue:(id)value subIndex:(id)index time:(id)time;
-(id)getTimeOffset;
-(id)getCurrentUserId;
-(void)initStartTimeOffset;
-(void)createTrade:(id)trade withID:(id)anId;
-(void)createTradeAndAutopay:(id)autopay withID:(id)anId;
-(id)obtainOffLineUniqueID;
-(void)generateOtp;
-(void)obtainUniqueID;
-(void)closeConnection;
-(void)retryConnection;
-(void)disconnectLongConnection;
-(void)removeEvent;
-(void)addEvent;
-(void)connectLongConnection;
@end

