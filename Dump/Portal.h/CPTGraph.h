/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Portal-Structs.h"
#import "CPTBorderedLayer.h"

@class NSArray, CPTLayerAnnotation, CPTAxisSet, NSAttributedString, CPTGraphHostingView, CPTTextStyle, CPTLegend, NSString, CPTPlotSpace, CPTPlotAreaFrame, NSMutableArray;

@interface CPTGraph : CPTBorderedLayer {
@private
	CPTGraphHostingView* hostingView;
	CPTPlotAreaFrame* plotAreaFrame;
	NSMutableArray* plots;
	NSMutableArray* plotSpaces;
	NSString* title;
	NSAttributedString* attributedTitle;
	CPTTextStyle* titleTextStyle;
	int titlePlotAreaFrameAnchor;
	CGPoint titleDisplacement;
	CPTLayerAnnotation* titleAnnotation;
	CPTLegend* legend;
	CPTLayerAnnotation* legendAnnotation;
	int legendAnchor;
	CGPoint legendDisplacement;
}
@property(retain, nonatomic) CPTLayerAnnotation* legendAnnotation;
@property(retain, nonatomic) CPTLayerAnnotation* titleAnnotation;
@property(retain, nonatomic) NSMutableArray* plotSpaces;
@property(retain, nonatomic) NSMutableArray* plots;
@property(assign, nonatomic) CGPoint legendDisplacement;
@property(assign, nonatomic) int legendAnchor;
@property(retain, nonatomic) CPTLegend* legend;
@property(retain, nonatomic) NSArray* topDownLayerOrder;
@property(readonly, assign, nonatomic) CPTPlotSpace* defaultPlotSpace;
@property(retain, nonatomic) CPTPlotAreaFrame* plotAreaFrame;
@property(retain, nonatomic) CPTAxisSet* axisSet;
@property(assign, nonatomic) int titlePlotAreaFrameAnchor;
@property(assign, nonatomic) CGPoint titleDisplacement;
@property(copy, nonatomic) CPTTextStyle* titleTextStyle;
@property(copy, nonatomic) NSAttributedString* attributedTitle;
@property(copy, nonatomic) NSString* title;
@property(assign, nonatomic) CPTGraphHostingView* hostingView;
+(BOOL)needsDisplayForKey:(id)key;
-(BOOL)pointingDeviceCancelledEvent:(UIEvent*)event;
-(BOOL)pointingDeviceDraggedEvent:(UIEvent*)event atPoint:(CGPoint)point;
-(BOOL)pointingDeviceUpEvent:(UIEvent*)event atPoint:(CGPoint)point;
-(BOOL)pointingDeviceDownEvent:(UIEvent*)event atPoint:(CGPoint)point;
-(void)setPaddingBottom:(float)bottom;
-(void)setPaddingTop:(float)top;
-(void)setPaddingRight:(float)right;
-(void)setPaddingLeft:(float)left;
-(CGPoint)contentAnchorForRectAnchor:(int)rectAnchor;
-(void)applyTheme:(id)theme;
-(void)plotSpaceMappingDidChange:(id)plotSpaceMapping;
-(void)removePlotSpace:(id)space;
-(void)addPlotSpace:(id)space;
-(id)plotSpaceWithIdentifier:(id)identifier;
-(id)plotSpaceAtIndex:(unsigned)index;
-(id)allPlotSpaces;
-(void)removePlotWithIdentifier:(id)identifier;
-(void)insertPlot:(id)plot atIndex:(unsigned)index intoPlotSpace:(id)space;
-(void)insertPlot:(id)plot atIndex:(unsigned)index;
-(void)removePlot:(id)plot;
-(void)addPlot:(id)plot toPlotSpace:(id)plotSpace;
-(void)addPlot:(id)plot;
-(id)plotWithIdentifier:(id)identifier;
-(id)plotAtIndex:(unsigned)index;
-(id)allPlots;
-(void)reloadDataIfNeeded;
-(void)reloadData;
-(void)layoutAndRenderInContext:(CGContextRef)context;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)dealloc;
-(id)initWithLayer:(id)layer;
-(id)initWithFrame:(CGRect)frame;
-(id)newAxisSet;
-(id)newPlotSpace;
@end

