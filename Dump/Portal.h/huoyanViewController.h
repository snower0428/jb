/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Portal-Structs.h"
#import "AVCamCaptureManager_HYDelegate.h"
#import "UIImagePickerControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import "kkStateViewDelegate.h"
#import "CustomHudDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSTimer, AVCamCaptureManager_HY, AVCamPreviewView, UIView, NSMutableString, CALayer, NSString, UIImageView, UILabel, customHud, UIButton, NSMutableDictionary, UIViewController;
@protocol huoyanViewControllerDelegate;

@interface huoyanViewController : XXUnknownSuperclass <AVCamCaptureManager_HYDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate, kkStateViewDelegate, CustomHudDelegate> {
@private
	NSMutableString* productStr;
	unsigned long _soundID;
	NSString* resourcePath;
	BOOL _torchOff;
	int bTransition;
	BOOL focusObserveEnabled;
	BOOL _navBarHidden;
	int _bStateViewEnable;
	BOOL _bSelfVisible;
	int _localPhotoResult;
	BOOL _bStopPopup;
	BOOL _bPhotoButtonEnable;
	float camWidth;
	float lastCamWidth;
	float firstY;
	float lastY;
	BOOL bGestureEnable;
	float cameraWidth;
	float cameraHeight;
	BOOL _bBackHiden;
	BOOL _bTorchHiden;
	BOOL _bInfoHiden;
	BOOL _bPhotoLibraryHiden;
	BOOL _bHistoryHiden;
	BOOL _bNeedBarcodeCatchUI;
	id<huoyanViewControllerDelegate> _delegate;
	int _scanType;
	NSString* _tipMsg;
	NSString* _errorMsgOfPhotoLibrary;
	int _bShowPopup;
	AVCamCaptureManager_HY* _captureManager;
	AVCamPreviewView* _videoPreviewView;
	CALayer* _captureVideoPreviewLayer;
	UIImageView* _localPhotoImageView;
	UIView* _barCodeParent;
	UIView* _barCodeAnimate;
	UIView* _barCodeNet;
	UIView* _barCodeShadow1;
	UIView* _barCodeShadow2;
	UIView* _containerParentView;
	UIView* _defaultContainerView;
	UIView* _containerView;
	UILabel* _tipBarLabel;
	UILabel* _tipLabel;
	UIButton* _tipButton;
	UIButton* _flashButton;
	UIButton* _infoButton;
	UIButton* _photoLibraryButton;
	UIButton* _backButton;
	UIButton* _historyButton;
	UIView* _openParentView;
	UIView* _openUpView;
	UIView* _openDownView;
	UIImageView* _openCenterView;
	UIView* _waitingParentView;
	int _bCapturing;
	UIViewController* _popupVC;
	float _cameraWidth2ScreenWidth;
	customHud* _hyCustomHud;
	NSTimer* _customHudTimer;
	UIView* _tapView;
	NSMutableDictionary* _pluginDict;
	double _focusInterval;
	CGRect _defaultScanRect;
}
@property(retain, nonatomic) NSMutableDictionary* pluginDict;
@property(assign, nonatomic) double focusInterval;
@property(retain, nonatomic) UIView* tapView;
@property(assign, nonatomic) NSTimer* customHudTimer;
@property(retain, nonatomic) customHud* hyCustomHud;
@property(assign, nonatomic) float cameraWidth2ScreenWidth;
@property(retain, nonatomic) UIViewController* popupVC;
@property(assign, nonatomic) int bCapturing;
@property(retain, nonatomic) UIView* waitingParentView;
@property(retain, nonatomic) UIImageView* openCenterView;
@property(retain, nonatomic) UIView* openDownView;
@property(retain, nonatomic) UIView* openUpView;
@property(retain, nonatomic) UIView* openParentView;
@property(retain, nonatomic) UIButton* historyButton;
@property(retain, nonatomic) UIButton* backButton;
@property(retain, nonatomic) UIButton* photoLibraryButton;
@property(retain, nonatomic) UIButton* infoButton;
@property(retain, nonatomic) UIButton* flashButton;
@property(retain, nonatomic) UIButton* tipButton;
@property(retain, nonatomic) UILabel* tipLabel;
@property(retain, nonatomic) UILabel* tipBarLabel;
@property(retain, nonatomic) UIView* containerView;
@property(retain, nonatomic) UIView* defaultContainerView;
@property(retain, nonatomic) UIView* containerParentView;
@property(retain, nonatomic) UIView* barCodeShadow2;
@property(retain, nonatomic) UIView* barCodeShadow1;
@property(retain, nonatomic) UIView* barCodeNet;
@property(retain, nonatomic) UIView* barCodeAnimate;
@property(retain, nonatomic) UIView* barCodeParent;
@property(retain, nonatomic) UIImageView* localPhotoImageView;
@property(assign, nonatomic) CALayer* captureVideoPreviewLayer;
@property(retain, nonatomic) AVCamPreviewView* videoPreviewView;
@property(assign, nonatomic) AVCamCaptureManager_HY* captureManager;
@property(assign, nonatomic) int bShowPopup;
@property(assign, nonatomic) BOOL bNeedBarcodeCatchUI;
@property(copy, nonatomic) NSString* errorMsgOfPhotoLibrary;
@property(assign, nonatomic) BOOL bHistoryHiden;
@property(assign, nonatomic) BOOL bPhotoLibraryHiden;
@property(assign, nonatomic) BOOL bInfoHiden;
@property(assign, nonatomic) BOOL bTorchHiden;
@property(assign, nonatomic) BOOL bBackHiden;
@property(assign, nonatomic) CGRect defaultScanRect;
@property(copy, nonatomic) NSString* tipMsg;
@property(assign, nonatomic) int scanType;
@property(assign, nonatomic) id<huoyanViewControllerDelegate> delegate;
+(void)cleanHuoyanCameraSession;
+(CGSize)sizeForGravity:(id)gravity frameSize:(CGSize)size apertureSize:(CGSize)size3;
+(CGRect)cleanApertureFromPorts:(id)ports;
-(id).cxx_construct;
-(id)getVideoPreviewView;
-(BOOL)canSetSession:(id)session;
-(void)playSound;
-(void)resumeScan;
-(void)pauseScan;
-(BOOL)getGestureEnable;
-(void)valueChangeStartEvent;
-(void)valueChangeEndEvent;
-(void)customHudValueChanged:(float)changed;
-(BOOL)isWebURL_HY:(id)hy;
-(BOOL)isSchemeSupported_HY:(id)hy;
-(BOOL)isExternalURL_HY:(id)hy;
-(BOOL)isAppURL_HY:(id)hy;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)scanLocalPhotoError;
-(void)showLocalPhotoResult;
-(void)scanBigImage:(id)image;
-(void)imagePickerController:(id)controller didFinishPickingMediaWithInfo:(id)info;
-(void)imagePickerControllerDidCancel:(id)imagePickerController;
-(void)scanPhotoLibrary;
-(void)onPhotoLibraryButton:(id)button;
-(void)configNetworkSDK;
-(void)viewWillHide;
-(void)viewWillShow;
-(void)navigationController:(id)controller willShowViewController:(id)controller2 animated:(BOOL)animated;
-(void)viewDidAppear:(BOOL)view;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(BOOL)checkCamera;
-(void)viewWillDisappear:(BOOL)view;
-(void)setPhotoButtonEnable;
-(void)initOpenAnimate;
-(void)startOpenAnimate;
-(void)cameraStarted:(id)started;
-(void)becomeActive;
-(void)pushToSearchList:(id)searchList;
-(id)convertToPointOfInterestFromViewCoordinates:(CGPoint)viewCoordinates;
-(CGPoint)translatePoint:(CGPoint)point fromGravity:(id)gravity toGravity:(id)gravity3;
-(void)startBarCodeAnimate;
-(void)forceFocus;
-(void)showNormalQrcode;
-(void)showWhiteListQrcode;
-(void)showTextQrcode;
-(void)showBarcodeControllerSuperView:(id)view withInfo:(id)info;
-(void)focusOnInterval;
-(void)continueScan;
-(float)getCameraHeight;
-(float)getCameraWidth;
-(void)showErrorMsg:(id)msg;
-(BOOL)checkWhiteList:(id)list;
-(void)updataUI:(id)ui;
-(void)resetCapture;
-(void)pushView:(id)view;
-(void)dismissFromTimeout:(id)timeout;
-(void)dismissToRoot:(id)root;
-(BOOL)checkIfHasNetwork;
-(void)showScanView;
-(void)hideScanView;
-(void)hideLoadingView;
-(void)showLoadingView;
-(id)isShowPopup;
-(void)gotoHuoyan;
-(void)setFlashButImage;
-(void)onHistory;
-(void)onBack;
-(BOOL)checkWillDisappear;
-(void)onTip:(id)tip;
-(void)onInfo:(id)info;
-(void)onTorch:(id)torch;
-(id)initWithNibName:(id)nibName bundle:(id)bundle;
-(void)setupCamera;
-(void)setPreviewRectByPreset;
-(void)setCameraWidth:(float)width;
-(float)getCameraWidth2ScreenWidth;
-(void)setStateViewEnable:(BOOL)enable;
-(CGSize)cameraSizeForCameraInput:(id)cameraInput;
-(void)setProductString:(id)string;
-(void)showCustomHud;
-(void)hideCustomHud;
-(void)didPan:(id)pan;
-(void)didTap:(id)tap;
-(void)didPinch:(id)pinch;
-(void)onStateViewTouchEnd;
-(void)viewDidLoad;
-(void)initUI;
-(id)getContainerView;
-(void)doContainerView;
-(void)addTarget:(int)target withSelector:(SEL)selector;
-(void)viewDidUnload;
-(void)didReceiveMemoryWarning;
-(void)dealloc;
-(void)releaseCritical;
-(void)initCritical;
-(void)releaseMemory;
-(void)initMemory;
-(void)setOtherTypeState;
-(void)processPreview:(opaqueCMSampleBuffer*)preview;
-(void)processPlugin:(int)plugin withInfo:(id)info;
-(void)registerPlugin:(id)plugin withType:(int)type;
-(id)getPluginByType:(int)type;
@end

