/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Portal-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSTimer, NSMutableArray, NSArray, AsyncReadPacket, AsyncWritePacket, NSMutableData;

@interface AsyncSocket : XXUnknownSuperclass {
	int theNativeSocket4;
	int theNativeSocket6;
	CFSocketRef theSocket4;
	CFSocketRef theSocket6;
	CFReadStreamRef theReadStream;
	CFWriteStreamRef theWriteStream;
	CFRunLoopSourceRef theSource4;
	CFRunLoopSourceRef theSource6;
	CFRunLoopRef theRunLoop;
	XXStruct_4pnlqD theContext;
	NSArray* theRunLoopModes;
	NSTimer* theConnectTimer;
	NSMutableArray* theReadQueue;
	AsyncReadPacket* theCurrentRead;
	NSTimer* theReadTimer;
	NSMutableData* partialReadBuffer;
	NSMutableArray* theWriteQueue;
	AsyncWritePacket* theCurrentWrite;
	NSTimer* theWriteTimer;
	id theDelegate;
	unsigned short theFlags;
	long theUserData;
}
+(id)ZeroData;
+(id)LFData;
+(id)CRData;
+(id)CRLFData;
-(void)doCFWriteStreamCallback:(unsigned long)callback forStream:(CFWriteStreamRef)stream;
-(void)doCFReadStreamCallback:(unsigned long)callback forStream:(CFReadStreamRef)stream;
-(void)doCFSocketCallback:(unsigned long)callback forSocket:(CFSocketRef)socket withAddress:(id)address withData:(const void*)data;
-(void)onTLSHandshakeSuccessful;
-(void)maybeStartTLS;
-(void)startTLS:(id)tls;
-(void)doWriteTimeout:(id)timeout;
-(void)endCurrentWrite;
-(void)completeCurrentWrite;
-(void)doSendBytes;
-(BOOL)canAcceptBytes;
-(void)maybeDequeueWrite;
-(void)scheduleDequeueWrite;
-(void)writeData:(id)data withTimeout:(double)timeout tag:(long)tag;
-(void)doReadTimeout:(id)timeout;
-(void)endCurrentRead;
-(void)completeCurrentRead;
-(void)doBytesAvailable;
-(long)readIntoBuffer:(void*)buffer maxLength:(unsigned)length;
-(BOOL)hasBytesAvailable;
-(void)maybeDequeueRead;
-(void)scheduleDequeueRead;
-(void)readDataToData:(id)data withTimeout:(double)timeout buffer:(id)buffer bufferOffset:(unsigned)offset maxLength:(unsigned)length tag:(long)tag;
-(void)readDataToData:(id)data withTimeout:(double)timeout maxLength:(unsigned)length tag:(long)tag;
-(void)readDataToData:(id)data withTimeout:(double)timeout buffer:(id)buffer bufferOffset:(unsigned)offset tag:(long)tag;
-(void)readDataToData:(id)data withTimeout:(double)timeout tag:(long)tag;
-(void)readDataToLength:(unsigned)length withTimeout:(double)timeout buffer:(id)buffer bufferOffset:(unsigned)offset tag:(long)tag;
-(void)readDataToLength:(unsigned)length withTimeout:(double)timeout tag:(long)tag;
-(void)readDataWithTimeout:(double)timeout buffer:(id)buffer bufferOffset:(unsigned)offset maxLength:(unsigned)length tag:(long)tag;
-(void)readDataWithTimeout:(double)timeout buffer:(id)buffer bufferOffset:(unsigned)offset tag:(long)tag;
-(void)readDataWithTimeout:(double)timeout tag:(long)tag;
-(id)description;
-(BOOL)areStreamsConnected;
-(BOOL)isIPv6;
-(BOOL)isIPv4;
-(id)localAddress;
-(id)connectedAddress;
-(unsigned short)portFromAddress6:(sockaddr_in6*)address6;
-(unsigned short)portFromAddress4:(sockaddr_in*)address4;
-(id)hostFromAddress6:(sockaddr_in6*)address6;
-(id)hostFromAddress4:(sockaddr_in*)address4;
-(unsigned short)localPortFromCFSocket6:(CFSocketRef)cfsocket6;
-(unsigned short)localPortFromCFSocket4:(CFSocketRef)cfsocket4;
-(unsigned short)localPortFromNativeSocket6:(int)nativeSocket6;
-(unsigned short)localPortFromNativeSocket4:(int)nativeSocket4;
-(id)localHostFromCFSocket6:(CFSocketRef)cfsocket6;
-(id)localHostFromCFSocket4:(CFSocketRef)cfsocket4;
-(id)localHostFromNativeSocket6:(int)nativeSocket6;
-(id)localHostFromNativeSocket4:(int)nativeSocket4;
-(unsigned short)connectedPortFromCFSocket6:(CFSocketRef)cfsocket6;
-(unsigned short)connectedPortFromCFSocket4:(CFSocketRef)cfsocket4;
-(unsigned short)connectedPortFromNativeSocket6:(int)nativeSocket6;
-(unsigned short)connectedPortFromNativeSocket4:(int)nativeSocket4;
-(id)connectedHostFromCFSocket6:(CFSocketRef)cfsocket6;
-(id)connectedHostFromCFSocket4:(CFSocketRef)cfsocket4;
-(id)connectedHostFromNativeSocket6:(int)nativeSocket6;
-(id)connectedHostFromNativeSocket4:(int)nativeSocket4;
-(unsigned short)localPort6;
-(unsigned short)localPort4;
-(id)localHost6;
-(id)localHost4;
-(unsigned short)connectedPort6;
-(unsigned short)connectedPort4;
-(id)connectedHost6;
-(id)connectedHost4;
-(unsigned short)localPort;
-(id)localHost;
-(unsigned short)connectedPort;
-(id)connectedHost;
-(BOOL)isConnected;
-(BOOL)isDisconnected;
-(id)errorFromCFStreamError:(JMergePoint)cfstreamError;
-(id)getWriteTimeoutError;
-(id)getReadTimeoutError;
-(id)getReadMaxedOutError;
-(id)getConnectTimeoutError;
-(id)getAbortError;
-(id)getStreamError;
-(id)getSocketError;
-(id)getErrnoError;
-(id)unreadData;
-(void)maybeScheduleDisconnect;
-(void)disconnectAfterReadingAndWriting;
-(void)disconnectAfterWriting;
-(void)disconnectAfterReading;
-(void)disconnect;
-(void)close;
-(void)emptyQueues;
-(void)recoverUnreadData;
-(void)closeWithError:(id)error;
-(BOOL)setSocketFromStreamsAndReturnError:(id*)streamsAndReturnError;
-(void)doStreamOpen;
-(BOOL)openStreamsAndReturnError:(id*)error;
-(BOOL)configureStreamsAndReturnError:(id*)error;
-(BOOL)attachStreamsToRunLoop:(id)runLoop error:(id*)error;
-(BOOL)createStreamsToHost:(id)host onPort:(unsigned short)port error:(id*)error;
-(BOOL)createStreamsFromNative:(int)native error:(id*)error;
-(void)doSocketOpen:(CFSocketRef)open withCFSocketError:(long)cfsocketError;
-(void)doAcceptFromSocket:(CFSocketRef)socket withNewNativeSocket:(int)newNativeSocket;
-(BOOL)connectSocketToAddress:(id)address error:(id*)error;
-(BOOL)configureSocketAndReturnError:(id*)error;
-(BOOL)attachSocketsToRunLoop:(id)runLoop error:(id*)error;
-(BOOL)bindSocketToAddress:(id)address error:(id*)error;
-(BOOL)createSocketForAddress:(id)address error:(id*)error;
-(CFSocketRef)newAcceptSocketForAddress:(id)address error:(id*)error;
-(void)doConnectTimeout:(id)timeout;
-(void)endConnectTimeout;
-(void)startConnectTimeout:(double)timeout;
-(BOOL)connectToAddress:(id)address viaInterfaceAddress:(id)address2 withTimeout:(double)timeout error:(id*)error;
-(BOOL)connectToAddress:(id)address withTimeout:(double)timeout error:(id*)error;
-(BOOL)connectToAddress:(id)address error:(id*)error;
-(BOOL)connectToHost:(id)host onPort:(unsigned short)port withTimeout:(double)timeout error:(id*)error;
-(BOOL)connectToHost:(id)host onPort:(unsigned short)port error:(id*)error;
-(BOOL)acceptOnInterface:(id)interface port:(unsigned short)port error:(id*)error;
-(BOOL)acceptOnPort:(unsigned short)port error:(id*)error;
-(id)runLoopModes;
-(BOOL)removeRunLoopMode:(id)mode;
-(BOOL)addRunLoopMode:(id)mode;
-(BOOL)setRunLoopModes:(id)modes;
-(BOOL)moveToRunLoop:(id)runLoop;
-(void)enablePreBuffering;
-(void)runLoopUnscheduleWriteStream;
-(void)runLoopUnscheduleReadStream;
-(void)runLoopRemoveTimer:(id)timer mode:(id)mode;
-(void)runLoopAddTimer:(id)timer mode:(id)mode;
-(void)runLoopRemoveTimer:(id)timer;
-(void)runLoopAddTimer:(id)timer;
-(void)runLoopRemoveSource:(CFRunLoopSourceRef)source mode:(id)mode;
-(void)runLoopAddSource:(CFRunLoopSourceRef)source mode:(id)mode;
-(void)runLoopRemoveSource:(CFRunLoopSourceRef)source;
-(void)runLoopAddSource:(CFRunLoopSourceRef)source;
-(float)progressOfWriteReturningTag:(long*)writeReturningTag bytesDone:(unsigned*)done total:(unsigned*)total;
-(float)progressOfReadReturningTag:(long*)readReturningTag bytesDone:(unsigned*)done total:(unsigned*)total;
-(CFWriteStreamRef)getCFWriteStream;
-(CFReadStreamRef)getCFReadStream;
-(CFSocketRef)getCFSocket;
-(BOOL)canSafelySetDelegate;
-(void)setDelegate:(id)delegate;
-(id)delegate;
-(void)setUserData:(long)data;
-(long)userData;
-(void)checkForThreadSafety;
-(void)dealloc;
-(id)initWithDelegate:(id)delegate userData:(long)data;
-(id)initWithDelegate:(id)delegate;
-(id)init;
@end

